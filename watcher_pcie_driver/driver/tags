!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
GENERIC_PCIE_DEVICEID	generic_pcie.h	34;"	d
GENERIC_PCIE_DRIVER_H	generic_pcie.h	2;"	d
GENERIC_PCIE_NAME	generic_pcie.c	16;"	d	file:
GENERIC_PCIE_NUMS	generic_pcie.c	17;"	d	file:
GENERIC_PCIE_VENDORID	generic_pcie.h	33;"	d
KERNELDIR	Makefile	/^KERNELDIR ?= $(TILERA_ROOT)\/src\/linux-3.4.68\/build$/;"	m
KERNELDIR	Makefile	/^KERNELDIR ?= \/lib\/modules\/$(shell uname -r)\/build$/;"	m
PCI_TYPE0_ADDRESSES	generic_pcie.h	50;"	d
PWD	Makefile	/^PWD := $(shell pwd)$/;"	m
TRACE	generic_pcie.h	79;"	d
TR_F_CLOSE	generic_pcie.h	70;"	d
TR_F_ERROR	generic_pcie.h	72;"	d
TR_F_IOCTL	generic_pcie.h	71;"	d
TR_F_MMAP	generic_pcie.h	74;"	d
TR_F_OPEN	generic_pcie.h	69;"	d
TR_F_REMOVE	generic_pcie.h	73;"	d
__devinitdata	generic_pcie.c	/^static struct pci_device_id pcie_generic_table[] __devinitdata = $/;"	v	typeref:struct:pcie_generic_table	file:
__this_module	generic_pcie.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__used	generic_pcie.mod.c	/^__used$/;"	v	file:
bar	generic_pcie.h	/^        u64     bar[PCI_TYPE0_ADDRESSES];$/;"	m	struct:generic_dev::st_cfg
cdev	generic_pcie.h	/^    struct cdev cdev;$/;"	m	struct:generic_dev	typeref:struct:generic_dev::cdev
cfg	generic_pcie.h	/^    }  cfg;$/;"	m	struct:generic_dev	typeref:struct:generic_dev::st_cfg
dma_desc_phyaddr	generic_pcie.h	/^    u64 dma_desc_phyaddr;$/;"	m	struct:generic_dev
dma_desc_t	generic_pcie.c	/^}dma_desc_t;$/;"	t	typeref:struct:__anon1	file:
dma_desc_viraddr	generic_pcie.h	/^    u64 dma_desc_viraddr;$/;"	m	struct:generic_dev
dma_length	generic_pcie.c	/^    u32 dma_length;$/;"	m	struct:__anon1	file:
dma_read_phyaddr	generic_pcie.h	/^    u64 dma_read_phyaddr;$/;"	m	struct:generic_dev
dma_read_viraddr	generic_pcie.h	/^    u64 dma_read_viraddr;$/;"	m	struct:generic_dev
dma_write_phyaddr	generic_pcie.h	/^    u64 dma_write_phyaddr;$/;"	m	struct:generic_dev
dma_write_viraddr	generic_pcie.h	/^    u64 dma_write_viraddr;$/;"	m	struct:generic_dev
endpoint	generic_pcie.c	/^    u32 endpoint;$/;"	m	struct:__anon1	file:
first	generic_pcie.h	/^    dev_t first;$/;"	m	struct:generic_dev
func	generic_pcie.h	/^        u32 func;$/;"	m	struct:generic_dev::st_cfg
gdev_body	generic_pcie.c	/^struct generic_dev gdev_body;$/;"	v	typeref:struct:generic_dev
generic_dev	generic_pcie.h	/^struct generic_dev$/;"	s
generic_exit	generic_pcie.c	/^module_exit(generic_exit);  $/;"	v
generic_exit	generic_pcie.c	/^static void __exit generic_exit(void)$/;"	f	file:
generic_init	generic_pcie.c	/^module_init(generic_init);$/;"	v
generic_init	generic_pcie.c	/^static int __init generic_init(void)$/;"	f	file:
generic_pcie_close	generic_pcie.c	/^static int generic_pcie_close(struct inode * inode, struct file * filp)$/;"	f	file:
generic_pcie_dma_read	generic_pcie.c	/^static int generic_pcie_dma_read(struct generic_dev * gdev, unsigned long arg)$/;"	f	file:
generic_pcie_dma_write	generic_pcie.c	/^static int generic_pcie_dma_write(struct generic_dev * gdev, unsigned long arg)$/;"	f	file:
generic_pcie_ioctl	generic_pcie.c	/^static long generic_pcie_ioctl(struct file * fp, unsigned int cmd, unsigned long arg)$/;"	f	file:
generic_pcie_open	generic_pcie.c	/^static int generic_pcie_open(struct inode * inode, struct file * filp)$/;"	f	file:
generic_pcie_ops	generic_pcie.c	/^static const struct file_operations generic_pcie_ops = $/;"	v	typeref:struct:file_operations	file:
generic_pcie_read_ullong	generic_pcie.c	/^static int generic_pcie_read_ullong(struct generic_dev * gdev, unsigned long long arg)$/;"	f	file:
generic_pcie_read_ulong	generic_pcie.c	/^static int generic_pcie_read_ulong(struct generic_dev * gdev, unsigned long arg)$/;"	f	file:
generic_pcie_write_ullong	generic_pcie.c	/^static int generic_pcie_write_ullong(struct generic_dev * gdev, unsigned long arg)$/;"	f	file:
generic_pcie_write_ulong	generic_pcie.c	/^static int generic_pcie_write_ulong(struct generic_dev * gdev, unsigned long arg)$/;"	f	file:
global_trace	generic_pcie.c	/^int global_trace = TR_F_ERROR;$/;"	v
irq	generic_pcie.h	/^        u32 irq;$/;"	m	struct:generic_dev::st_cfg
lower_addr	generic_pcie.c	/^    u32 lower_addr;$/;"	m	struct:__anon1	file:
map	generic_pcie.h	/^        void    *map[PCI_TYPE0_ADDRESSES];$/;"	m	struct:generic_dev::st_cfg
obj-m	Makefile	/^obj-m		:= generic_pcie.o$/;"	m
pcie_generic_driver	generic_pcie.c	/^static struct pci_driver pcie_generic_driver =$/;"	v	typeref:struct:pci_driver	file:
pcie_generic_probe	generic_pcie.c	/^static int pcie_generic_probe(struct pci_dev * pci_dev, const struct pci_device_id * id)$/;"	f	file:
pcie_generic_remove	generic_pcie.c	/^static void pcie_generic_remove(struct pci_dev * dev)$/;"	f	file:
pdev	generic_pcie.h	/^    struct pci_dev * pdev;$/;"	m	struct:generic_dev	typeref:struct:generic_dev::pci_dev
reg_read_ullong	generic_pcie.c	/^static inline void reg_read_ullong(struct generic_dev* gdev, $/;"	f	file:
reg_read_ulong	generic_pcie.c	/^static inline void reg_read_ulong(struct generic_dev* ldev,$/;"	f	file:
reg_write_ullong	generic_pcie.c	/^static inline void reg_write_ullong(struct generic_dev* gdev,$/;"	f	file:
reg_write_ulong	generic_pcie.c	/^static inline void reg_write_ulong(struct generic_dev* ldev,$/;"	f	file:
reserved	generic_pcie.c	/^    u32 reserved[4];$/;"	m	struct:__anon1	file:
siz	generic_pcie.h	/^        u32     siz[PCI_TYPE0_ADDRESSES];$/;"	m	struct:generic_dev::st_cfg
slot	generic_pcie.h	/^        u32 slot;$/;"	m	struct:generic_dev::st_cfg
st_cfg	generic_pcie.h	/^    struct st_cfg$/;"	s	struct:generic_dev
typ	generic_pcie.h	/^        u32     typ[PCI_TYPE0_ADDRESSES];$/;"	m	struct:generic_dev::st_cfg
upper_addr	generic_pcie.c	/^    u32 upper_addr;$/;"	m	struct:__anon1	file:
using_base_num	generic_pcie.h	/^        u8      using_base_num;$/;"	m	struct:generic_dev::st_cfg
