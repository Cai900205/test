From: Vladimir Sokolovsky <vlad@mellanox.com>
Subject: [PATCH] BACKPORT: qib

Signed-off-by: Vladimir Sokolovsky <vlad@mellanox.com>
---
 drivers/infiniband/hw/qib/qib_file_ops.c   |  4 ++++
 drivers/infiniband/hw/qib/qib_fs.c         | 29 +++++++++++++++++++++++++++++
 drivers/infiniband/hw/qib/qib_init.c       | 20 ++++++++++++++++++++
 drivers/infiniband/hw/qib/qib_user_pages.c |  8 ++++++++
 4 files changed, 61 insertions(+)

diff --git a/drivers/infiniband/hw/qib/qib_file_ops.c b/drivers/infiniband/hw/qib/qib_file_ops.c
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/infiniband/hw/qib/qib_file_ops.c
+++ b/drivers/infiniband/hw/qib/qib_file_ops.c
@@ -39,7 +39,11 @@
 #include <linux/vmalloc.h>
 #include <linux/highmem.h>
 #include <linux/io.h>
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0))
 #include <linux/uio.h>
+#else
+#include <linux/aio.h>
+#endif
 #include <linux/jiffies.h>
 #include <asm/pgtable.h>
 #include <linux/delay.h>
diff --git a/drivers/infiniband/hw/qib/qib_fs.c b/drivers/infiniband/hw/qib/qib_fs.c
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/infiniband/hw/qib/qib_fs.c
+++ b/drivers/infiniband/hw/qib/qib_fs.c
@@ -59,7 +59,9 @@ static int qibfs_mknod(struct inode *dir, struct dentry *dentry,
 		goto bail;
 	}
 
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,36))
 	inode->i_ino = get_next_ino();
+#endif
 	inode->i_mode = mode;
 	inode->i_uid = GLOBAL_ROOT_UID;
 	inode->i_gid = GLOBAL_ROOT_GID;
@@ -454,14 +456,27 @@ static int remove_file(struct dentry *parent, char *name)
 		goto bail;
 	}
 
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,36))
+	spin_lock(&dcache_lock);
+#endif
 	spin_lock(&tmp->d_lock);
 	if (!(d_unhashed(tmp) && tmp->d_inode)) {
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,36))
+		dget_locked(tmp);
+#else
 		dget_dlock(tmp);
+#endif
 		__d_drop(tmp);
 		spin_unlock(&tmp->d_lock);
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,36))
+		spin_unlock(&dcache_lock);
+#endif
 		simple_unlink(parent->d_inode, tmp);
 	} else {
 		spin_unlock(&tmp->d_lock);
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,36))
+		spin_unlock(&dcache_lock);
+#endif
 	}
 
 	ret = 0;
@@ -553,6 +568,7 @@ bail:
 	return ret;
 }
 
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,36))
 static struct dentry *qibfs_mount(struct file_system_type *fs_type, int flags,
 			const char *dev_name, void *data)
 {
@@ -560,6 +576,15 @@ static struct dentry *qibfs_mount(struct file_system_type *fs_type, int flags,
 	ret = mount_single(fs_type, flags, data, qibfs_fill_super);
 	if (!IS_ERR(ret))
 		qib_super = ret->d_sb;
+#else
+static int qibfs_get_sb(struct file_system_type *fs_type, int flags,
+			const char *dev_name, void *data, struct vfsmount *mnt)
+{
+	int ret = get_sb_single(fs_type, flags, data,
+					qibfs_fill_super, mnt);
+	if (ret >= 0)
+		qib_super = mnt->mnt_sb;
+#endif
 	return ret;
 }
 
@@ -601,7 +626,11 @@ int qibfs_remove(struct qib_devdata *dd)
 static struct file_system_type qibfs_fs_type = {
 	.owner =        THIS_MODULE,
 	.name =         "ipathfs",
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,36))
 	.mount =        qibfs_mount,
+#else
+	.get_sb =        qibfs_get_sb,
+#endif
 	.kill_sb =      qibfs_kill_super,
 };
 
diff --git a/drivers/infiniband/hw/qib/qib_init.c b/drivers/infiniband/hw/qib/qib_init.c
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/infiniband/hw/qib/qib_init.c
+++ b/drivers/infiniband/hw/qib/qib_init.c
@@ -1060,10 +1060,12 @@ struct qib_devdata *qib_alloc_devdata(struct pci_dev *pdev, size_t extra)
 	struct qib_devdata *dd;
 	int ret;
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,9,0))
 	if (!idr_pre_get(&qib_unit_table, GFP_KERNEL)) {
 		dd = ERR_PTR(-ENOMEM);
 		goto bail;
 	}
+#endif
 
 	dd = (struct qib_devdata *) ib_alloc_device(sizeof(*dd) + extra);
 	if (!dd) {
@@ -1071,11 +1073,25 @@ struct qib_devdata *qib_alloc_devdata(struct pci_dev *pdev, size_t extra)
 		goto bail;
 	}
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,9,0))
+	idr_preload(GFP_KERNEL);
+#endif
 	spin_lock_irqsave(&qib_devs_lock, flags);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,9,0))
 	ret = idr_get_new(&qib_unit_table, dd, &dd->unit);
 	if (ret >= 0)
 		list_add(&dd->list, &qib_dev_list);
+#else
+	ret = idr_alloc(&qib_unit_table, dd, 0, 0, GFP_NOWAIT);
+	if (ret >= 0) {
+		dd->unit = ret;
+		list_add(&dd->list, &qib_dev_list);
+	}
+#endif
 	spin_unlock_irqrestore(&qib_devs_lock, flags);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,9,0))
+	idr_preload_end();
+#endif
 
 	if (ret < 0) {
 		qib_early_err(&pdev->dev,
@@ -1181,11 +1197,13 @@ static int __init qlogic_ib_init(void)
 	 * the PCI subsystem.
 	 */
 	idr_init(&qib_unit_table);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,9,0))
 	if (!idr_pre_get(&qib_unit_table, GFP_KERNEL)) {
 		pr_err("idr_pre_get() failed\n");
 		ret = -ENOMEM;
 		goto bail_cq_wq;
 	}
+#endif
 
 	ret = pci_register_driver(&qib_driver);
 	if (ret < 0) {
@@ -1200,7 +1218,9 @@ static int __init qlogic_ib_init(void)
 
 bail_unit:
 	idr_destroy(&qib_unit_table);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,9,0))
 bail_cq_wq:
+#endif
 	destroy_workqueue(qib_cq_wq);
 bail_dev:
 	qib_dev_cleanup();
diff --git a/drivers/infiniband/hw/qib/qib_user_pages.c b/drivers/infiniband/hw/qib/qib_user_pages.c
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/infiniband/hw/qib/qib_user_pages.c
+++ b/drivers/infiniband/hw/qib/qib_user_pages.c
@@ -74,7 +74,11 @@ static int __qib_get_user_pages(unsigned long start_page, size_t num_pages,
 			goto bail_release;
 	}
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0))
 	current->mm->pinned_vm += num_pages;
+#else
+	current->mm->locked_vm += num_pages;
+#endif
 
 	ret = 0;
 	goto bail;
@@ -151,7 +155,11 @@ void qib_release_user_pages(struct page **p, size_t num_pages)
 	__qib_release_user_pages(p, num_pages, 1);
 
 	if (current->mm) {
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0))
 		current->mm->pinned_vm -= num_pages;
+#else
+		current->mm->locked_vm -= num_pages;
+#endif
 		up_write(&current->mm->mmap_sem);
 	}
 }
