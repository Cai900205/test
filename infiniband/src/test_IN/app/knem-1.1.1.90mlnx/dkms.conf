# Copyright Â© inria 2009-2010
# Brice Goglin <Brice.Goglin@inria.fr>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# DKMS (Dynamic Kernel Module Support) configuration file for automatic
# rebuilding and installing of the knem module for new kernels.
#
# Assuming you want to use knem 0.9.2, you should first unpack the tarball
# knem-0.9.2.tar.gz in /usr/src. Then run configure inside this source
# tree, and build and install it as usual. Now, you should tell DKMS to
# use the source tree for building updated kernel modules:
#   dkms add -m knem -v 0.9.2
# When installing a new kernel, DKMS will rebuild the knem module and
# install it under /lib/modules/ (it may then be loaded with modprobe).
#
# If you ever need to manually invoke DKMS to rebuild the module against
# the current kernel (or against a specific kernel by adding the right
# -k option), do:
#   dkms build -m knem -v 0.9.2
#   dkms install -m knem -v 0.9.2
# To uninstall everything DKMS generated from this knem tarball:
#   dkms remove -m knem -v 0.9.2 --all
#   rm -rf /usr/src/knem-0.9.2
#
# See http://www.linuxjournal.com/article/6896 for details.


# DKMS module name and version
PACKAGE_NAME="knem"
PACKAGE_VERSION="1.1.1.90mlnx"

# Module name, source and destination directories, and build command-line
BUILT_MODULE_NAME[0]="knem"
BUILT_MODULE_LOCATION[0]="driver/linux"
DEST_MODULE_LOCATION[0]="/kernel/../updates/"
MAKE[0]="./configure --with-linux-release=${kernelver} --prefix=/opt/${PACKAGE_NAME}-${PACKAGE_VERSION} ; make clean ; make; yes|cp -f ${dkms_tree}/${PACKAGE_NAME}/${PACKAGE_VERSION}/build/${PACKAGE_NAME=}.pc /usr/lib/pkgconfig"

# Cleanup command-line
CLEAN="make distclean"

# Rebuild and autoinstall automatically when dkms_autoinstaller runs for a new kernel
AUTOINSTALL="yes"
