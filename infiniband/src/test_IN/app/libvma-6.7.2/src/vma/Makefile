# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/vma/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libvma
pkgincludedir = $(includedir)/libvma
pkglibdir = $(libdir)/libvma
pkglibexecdir = $(libexecdir)/libvma
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = powerpc64-unknown-linux-gnu
host_triplet = powerpc64-unknown-linux-gnu
subdir = src/vma
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	config_parser.h config_parser.c config_scanner.c \
	$(top_srcdir)/config/depcomp $(top_srcdir)/config/ylwrap \
	$(include_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(sysconfdir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libconfig_parser_la_LIBADD =
am_libconfig_parser_la_OBJECTS = libconfig_parser_la-config_parser.lo \
	libconfig_parser_la-config_scanner.lo
libconfig_parser_la_OBJECTS = $(am_libconfig_parser_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libconfig_parser_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libconfig_parser_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libvma_la_OBJECTS = ah_cleaner.lo buffer_pool.lo cq_mgr.lo \
	qp_mgr.lo gro_mgr.lo ring.lo ring_allocation_logic.lo rfs.lo \
	rfs_uc.lo rfs_uc_tcp_gro.lo rfs_mc.lo ib_ctx_handler.lo \
	ib_ctx_handler_collection.lo net_device_val.lo \
	net_device_entry.lo net_device_table_mgr.lo \
	wqe_send_handler.lo wqe_send_ib_handler.lo delta_timer.lo \
	event_handler_manager.lo vlogger_timer_handler.lo \
	netlink_event.lo route_net_dev_event.lo epfd_info.lo \
	epoll_wait_call.lo io_mux_call.lo poll_call.lo select_call.lo \
	ip_frag.lo flow_tuple.lo vma_lwip.lo neighbour.lo \
	neighbour_table_mgr.lo L2_address.lo route_table_mgr.lo \
	route_entry.lo route_val.lo rule_table_mgr.lo rule_entry.lo \
	rule_val.lo dst_entry.lo dst_entry_udp.lo dst_entry_udp_mc.lo \
	dst_entry_tcp.lo header.lo arp.lo igmp_mgr.lo igmp_handler.lo \
	sockinfo.lo sockinfo_udp.lo sockinfo_tcp.lo fd_collection.lo \
	pipeinfo.lo socket_fd_api.lo sock-redirect.lo \
	subject_observer.lo sender.lo wakeup.lo match.lo utils.lo \
	verbs_extra.lo instrumentation.lo libvma.lo main.lo \
	stats_publisher.lo stats_printer.lo netlink_wrapper.lo \
	neigh_info.lo link_info.lo route_info.lo
libvma_la_OBJECTS = $(am_libvma_la_OBJECTS)
libvma_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libvma_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/config/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_$(V))
am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
SOURCES = $(libconfig_parser_la_SOURCES) $(libvma_la_SOURCES)
DIST_SOURCES = $(libconfig_parser_la_SOURCES) $(libvma_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(sysconf_DATA)
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/root/Infiniband/test/app/libvma-6.7.2/config/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/root/Infiniband/test/app/libvma-6.7.2/config/missing autoconf
AUTOHEADER = ${SHELL} /home/root/Infiniband/test/app/libvma-6.7.2/config/missing autoheader
AUTOMAKE = ${SHELL} /home/root/Infiniband/test/app/libvma-6.7.2/config/missing automake-1.14
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -Wextra -Werror -Wno-format-security -Wno-unused-result -Wno-unused-but-set-variable -Wno-array-bounds -D_GNU_SOURCE -fPIC -g -O3  -I/usr/local/ofed/include
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -Wextra -Werror -Wno-format-security -Wno-unused-result -Wno-unused-but-set-variable -Wno-array-bounds -D_GNU_SOURCE -fPIC -g -O3  -I/usr/local/ofed/include
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/powerpc64-fsl-linux/bin/ld
LDFLAGS =  -L/usr/local/ofed/lib
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.libvma_yy
LIBALIC_FLAG = --enable-debuginfo 
LIBOBJS = 
LIBS = -lpthread -lrt -ldl -lstdc++ 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/root/Infiniband/test/app/libvma-6.7.2/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OFED_VERSION = 
OTOOL = 
OTOOL64 = 
PACKAGE = libvma
PACKAGE_BUGREPORT = support@mellanox.com
PACKAGE_NAME = libvma
PACKAGE_STRING = libvma 6.7.2
PACKAGE_TARNAME = libvma
PACKAGE_URL = 
PACKAGE_VERSION = 6.7.2
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SOCKPERF_FLAG = --enable-debuginfo 
STRIP = strip
VERSION = 6.7.2
VMA_LIBRARY_MAJOR = 6
VMA_LIBRARY_MINOR = 7
VMA_LIBRARY_RELEASE = 0
VMA_LIBRARY_REVISION = 2
YACC = bison -y
YFLAGS = 
abs_builddir = /home/root/Infiniband/test/app/libvma-6.7.2/src/vma
abs_srcdir = /home/root/Infiniband/test/app/libvma-6.7.2/src/vma
abs_top_builddir = /home/root/Infiniband/test/app/libvma-6.7.2
abs_top_srcdir = /home/root/Infiniband/test/app/libvma-6.7.2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = powerpc64-unknown-linux-gnu
build_alias = 
build_cpu = powerpc64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = powerpc64-unknown-linux-gnu
host_alias = 
host_cpu = powerpc64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/root/Infiniband/test/app/libvma-6.7.2/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_LTLIBRARIES = \
	libconfig_parser.la

libconfig_parser_la_SOURCES = \
	util/config_parser.y \
	util/config_scanner.l

libconfig_parser_la_CFLAGS = \
	-Wno-sign-compare

AM_LFLAGS = -Plibvma_yy
AM_YFLAGS = -plibvma_yy -d
BUILT_SOURCES = config_parser.h
sysconf_DATA = util/libvma.conf
include_HEADERS = vma_extra.h
lib_LTLIBRARIES = libvma.la
INCLUDES := \
	-I$(top_builddir) \
	-I$(top_builddir)/src \
	-I$(top_builddir)/src/lwip/src/include \
	-I$(top_builddir)/src/lwip/src/include/ipv4 \
	-I$(top_builddir)/src/lwip/arch \
	-I$(top_builddir)/src/lwip/ \
	-I$(top_builddir)/src/netlink/

#libvma_la_LDFLAGS := -no-undefined -version-number 6:7:2 -release 0
libvma_la_LDFLAGS := -no-undefined -version-number 6:7:2 
libvma_la_LIBADD = \
	-lrt -ldl -lpthread -libverbs -lrdmacm -lnl \
	$(top_builddir)/src/vlogger/libvlogger.la \
	$(top_builddir)/src/state_machine/libstate_machine.la \
	$(top_builddir)/src/lwip/src/liblwip.la \
	libconfig_parser.la

libvma_la_SOURCES := \
	dev/ah_cleaner.cpp \
	dev/buffer_pool.cpp \
	dev/cq_mgr.cpp \
	dev/qp_mgr.cpp \
	dev/gro_mgr.cpp \
	dev/ring.cpp \
	dev/ring_allocation_logic.cpp \
	dev/rfs.cpp \
	dev/rfs_uc.cpp \
	dev/rfs_uc_tcp_gro.cpp \
	dev/rfs_mc.cpp \
	dev/ib_ctx_handler.cpp \
	dev/ib_ctx_handler_collection.cpp \
	dev/net_device_val.cpp \
	dev/net_device_entry.cpp \
	dev/net_device_table_mgr.cpp \
	dev/wqe_send_handler.cpp \
	dev/wqe_send_ib_handler.cpp \
	\
	event/delta_timer.cpp \
	event/event_handler_manager.cpp \
	event/vlogger_timer_handler.cpp \
	event/netlink_event.cpp \
	event/route_net_dev_event.cpp\
	\
	iomux/epfd_info.cpp \
	iomux/epoll_wait_call.cpp \
	iomux/io_mux_call.cpp \
	iomux/poll_call.cpp \
	iomux/select_call.cpp \
	\
	proto/ip_frag.cpp \
	proto/flow_tuple.cpp \
	proto/vma_lwip.cpp \
	proto/neighbour.cpp \
	proto/neighbour_table_mgr.cpp \
	proto/L2_address.cpp \
	proto/route_table_mgr.cpp \
	proto/route_entry.cpp \
	proto/route_val.cpp \
	proto/rule_table_mgr.cpp \
	proto/rule_entry.cpp \
	proto/rule_val.cpp \
	proto/dst_entry.cpp \
	proto/dst_entry_udp.cpp \
	proto/dst_entry_udp_mc.cpp \
	proto/dst_entry_tcp.cpp \
	proto/header.cpp \
	proto/arp.cpp \
	proto/igmp_mgr.cpp \
	proto/igmp_handler.cpp \
	\
	sock/sockinfo.cpp \
	sock/sockinfo_udp.cpp \
	sock/sockinfo_tcp.cpp \
	sock/fd_collection.cpp \
	sock/pipeinfo.cpp \
	sock/socket_fd_api.cpp \
	sock/sock-redirect.cpp \
	\
	infra/subject_observer.cpp \
	infra/sender.cpp \
	\
	util/wakeup.cpp \
	util/match.cpp \
	util/utils.cpp \
	util/verbs_extra.cpp \
	util/instrumentation.cpp \
	libvma.c \
	main.cpp \
	../stats/stats_publisher.cpp \
	../stats/stats_printer.cpp \
	\
	netlink/netlink_wrapper.cpp \
	netlink/neigh_info.cpp \
	netlink/link_info.cpp \
	netlink/route_info.cpp 

libvma_la_DEPENDENCIES = \
	$(top_builddir)/src/vlogger/libvlogger.la \
	$(top_builddir)/src/state_machine/libstate_machine.la \
	$(top_builddir)/src/lwip/src/liblwip.la \
	libconfig_parser.la

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .l .lo .o .obj .y
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/vma/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/vma/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
config_parser.h: config_parser.c
	@if test ! -f $@; then rm -f config_parser.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) config_parser.c; else :; fi

libconfig_parser.la: $(libconfig_parser_la_OBJECTS) $(libconfig_parser_la_DEPENDENCIES) $(EXTRA_libconfig_parser_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libconfig_parser_la_LINK)  $(libconfig_parser_la_OBJECTS) $(libconfig_parser_la_LIBADD) $(LIBS)

libvma.la: $(libvma_la_OBJECTS) $(libvma_la_DEPENDENCIES) $(EXTRA_libvma_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libvma_la_LINK) -rpath $(libdir) $(libvma_la_OBJECTS) $(libvma_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/L2_address.Plo
include ./$(DEPDIR)/ah_cleaner.Plo
include ./$(DEPDIR)/arp.Plo
include ./$(DEPDIR)/buffer_pool.Plo
include ./$(DEPDIR)/cq_mgr.Plo
include ./$(DEPDIR)/delta_timer.Plo
include ./$(DEPDIR)/dst_entry.Plo
include ./$(DEPDIR)/dst_entry_tcp.Plo
include ./$(DEPDIR)/dst_entry_udp.Plo
include ./$(DEPDIR)/dst_entry_udp_mc.Plo
include ./$(DEPDIR)/epfd_info.Plo
include ./$(DEPDIR)/epoll_wait_call.Plo
include ./$(DEPDIR)/event_handler_manager.Plo
include ./$(DEPDIR)/fd_collection.Plo
include ./$(DEPDIR)/flow_tuple.Plo
include ./$(DEPDIR)/gro_mgr.Plo
include ./$(DEPDIR)/header.Plo
include ./$(DEPDIR)/ib_ctx_handler.Plo
include ./$(DEPDIR)/ib_ctx_handler_collection.Plo
include ./$(DEPDIR)/igmp_handler.Plo
include ./$(DEPDIR)/igmp_mgr.Plo
include ./$(DEPDIR)/instrumentation.Plo
include ./$(DEPDIR)/io_mux_call.Plo
include ./$(DEPDIR)/ip_frag.Plo
include ./$(DEPDIR)/libconfig_parser_la-config_parser.Plo
include ./$(DEPDIR)/libconfig_parser_la-config_scanner.Plo
include ./$(DEPDIR)/libvma.Plo
include ./$(DEPDIR)/link_info.Plo
include ./$(DEPDIR)/main.Plo
include ./$(DEPDIR)/match.Plo
include ./$(DEPDIR)/neigh_info.Plo
include ./$(DEPDIR)/neighbour.Plo
include ./$(DEPDIR)/neighbour_table_mgr.Plo
include ./$(DEPDIR)/net_device_entry.Plo
include ./$(DEPDIR)/net_device_table_mgr.Plo
include ./$(DEPDIR)/net_device_val.Plo
include ./$(DEPDIR)/netlink_event.Plo
include ./$(DEPDIR)/netlink_wrapper.Plo
include ./$(DEPDIR)/pipeinfo.Plo
include ./$(DEPDIR)/poll_call.Plo
include ./$(DEPDIR)/qp_mgr.Plo
include ./$(DEPDIR)/rfs.Plo
include ./$(DEPDIR)/rfs_mc.Plo
include ./$(DEPDIR)/rfs_uc.Plo
include ./$(DEPDIR)/rfs_uc_tcp_gro.Plo
include ./$(DEPDIR)/ring.Plo
include ./$(DEPDIR)/ring_allocation_logic.Plo
include ./$(DEPDIR)/route_entry.Plo
include ./$(DEPDIR)/route_info.Plo
include ./$(DEPDIR)/route_net_dev_event.Plo
include ./$(DEPDIR)/route_table_mgr.Plo
include ./$(DEPDIR)/route_val.Plo
include ./$(DEPDIR)/rule_entry.Plo
include ./$(DEPDIR)/rule_table_mgr.Plo
include ./$(DEPDIR)/rule_val.Plo
include ./$(DEPDIR)/select_call.Plo
include ./$(DEPDIR)/sender.Plo
include ./$(DEPDIR)/sock-redirect.Plo
include ./$(DEPDIR)/socket_fd_api.Plo
include ./$(DEPDIR)/sockinfo.Plo
include ./$(DEPDIR)/sockinfo_tcp.Plo
include ./$(DEPDIR)/sockinfo_udp.Plo
include ./$(DEPDIR)/stats_printer.Plo
include ./$(DEPDIR)/stats_publisher.Plo
include ./$(DEPDIR)/subject_observer.Plo
include ./$(DEPDIR)/utils.Plo
include ./$(DEPDIR)/verbs_extra.Plo
include ./$(DEPDIR)/vlogger_timer_handler.Plo
include ./$(DEPDIR)/vma_lwip.Plo
include ./$(DEPDIR)/wakeup.Plo
include ./$(DEPDIR)/wqe_send_handler.Plo
include ./$(DEPDIR)/wqe_send_ib_handler.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libconfig_parser_la-config_parser.lo: config_parser.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconfig_parser_la_CFLAGS) $(CFLAGS) -MT libconfig_parser_la-config_parser.lo -MD -MP -MF $(DEPDIR)/libconfig_parser_la-config_parser.Tpo -c -o libconfig_parser_la-config_parser.lo `test -f 'config_parser.c' || echo '$(srcdir)/'`config_parser.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconfig_parser_la-config_parser.Tpo $(DEPDIR)/libconfig_parser_la-config_parser.Plo
#	$(AM_V_CC)source='config_parser.c' object='libconfig_parser_la-config_parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconfig_parser_la_CFLAGS) $(CFLAGS) -c -o libconfig_parser_la-config_parser.lo `test -f 'config_parser.c' || echo '$(srcdir)/'`config_parser.c

libconfig_parser_la-config_scanner.lo: config_scanner.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconfig_parser_la_CFLAGS) $(CFLAGS) -MT libconfig_parser_la-config_scanner.lo -MD -MP -MF $(DEPDIR)/libconfig_parser_la-config_scanner.Tpo -c -o libconfig_parser_la-config_scanner.lo `test -f 'config_scanner.c' || echo '$(srcdir)/'`config_scanner.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libconfig_parser_la-config_scanner.Tpo $(DEPDIR)/libconfig_parser_la-config_scanner.Plo
#	$(AM_V_CC)source='config_scanner.c' object='libconfig_parser_la-config_scanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libconfig_parser_la_CFLAGS) $(CFLAGS) -c -o libconfig_parser_la-config_scanner.lo `test -f 'config_scanner.c' || echo '$(srcdir)/'`config_scanner.c

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

ah_cleaner.lo: dev/ah_cleaner.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ah_cleaner.lo -MD -MP -MF $(DEPDIR)/ah_cleaner.Tpo -c -o ah_cleaner.lo `test -f 'dev/ah_cleaner.cpp' || echo '$(srcdir)/'`dev/ah_cleaner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ah_cleaner.Tpo $(DEPDIR)/ah_cleaner.Plo
#	$(AM_V_CXX)source='dev/ah_cleaner.cpp' object='ah_cleaner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ah_cleaner.lo `test -f 'dev/ah_cleaner.cpp' || echo '$(srcdir)/'`dev/ah_cleaner.cpp

buffer_pool.lo: dev/buffer_pool.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT buffer_pool.lo -MD -MP -MF $(DEPDIR)/buffer_pool.Tpo -c -o buffer_pool.lo `test -f 'dev/buffer_pool.cpp' || echo '$(srcdir)/'`dev/buffer_pool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/buffer_pool.Tpo $(DEPDIR)/buffer_pool.Plo
#	$(AM_V_CXX)source='dev/buffer_pool.cpp' object='buffer_pool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o buffer_pool.lo `test -f 'dev/buffer_pool.cpp' || echo '$(srcdir)/'`dev/buffer_pool.cpp

cq_mgr.lo: dev/cq_mgr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cq_mgr.lo -MD -MP -MF $(DEPDIR)/cq_mgr.Tpo -c -o cq_mgr.lo `test -f 'dev/cq_mgr.cpp' || echo '$(srcdir)/'`dev/cq_mgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/cq_mgr.Tpo $(DEPDIR)/cq_mgr.Plo
#	$(AM_V_CXX)source='dev/cq_mgr.cpp' object='cq_mgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cq_mgr.lo `test -f 'dev/cq_mgr.cpp' || echo '$(srcdir)/'`dev/cq_mgr.cpp

qp_mgr.lo: dev/qp_mgr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qp_mgr.lo -MD -MP -MF $(DEPDIR)/qp_mgr.Tpo -c -o qp_mgr.lo `test -f 'dev/qp_mgr.cpp' || echo '$(srcdir)/'`dev/qp_mgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qp_mgr.Tpo $(DEPDIR)/qp_mgr.Plo
#	$(AM_V_CXX)source='dev/qp_mgr.cpp' object='qp_mgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qp_mgr.lo `test -f 'dev/qp_mgr.cpp' || echo '$(srcdir)/'`dev/qp_mgr.cpp

gro_mgr.lo: dev/gro_mgr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gro_mgr.lo -MD -MP -MF $(DEPDIR)/gro_mgr.Tpo -c -o gro_mgr.lo `test -f 'dev/gro_mgr.cpp' || echo '$(srcdir)/'`dev/gro_mgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gro_mgr.Tpo $(DEPDIR)/gro_mgr.Plo
#	$(AM_V_CXX)source='dev/gro_mgr.cpp' object='gro_mgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gro_mgr.lo `test -f 'dev/gro_mgr.cpp' || echo '$(srcdir)/'`dev/gro_mgr.cpp

ring.lo: dev/ring.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ring.lo -MD -MP -MF $(DEPDIR)/ring.Tpo -c -o ring.lo `test -f 'dev/ring.cpp' || echo '$(srcdir)/'`dev/ring.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ring.Tpo $(DEPDIR)/ring.Plo
#	$(AM_V_CXX)source='dev/ring.cpp' object='ring.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ring.lo `test -f 'dev/ring.cpp' || echo '$(srcdir)/'`dev/ring.cpp

ring_allocation_logic.lo: dev/ring_allocation_logic.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ring_allocation_logic.lo -MD -MP -MF $(DEPDIR)/ring_allocation_logic.Tpo -c -o ring_allocation_logic.lo `test -f 'dev/ring_allocation_logic.cpp' || echo '$(srcdir)/'`dev/ring_allocation_logic.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ring_allocation_logic.Tpo $(DEPDIR)/ring_allocation_logic.Plo
#	$(AM_V_CXX)source='dev/ring_allocation_logic.cpp' object='ring_allocation_logic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ring_allocation_logic.lo `test -f 'dev/ring_allocation_logic.cpp' || echo '$(srcdir)/'`dev/ring_allocation_logic.cpp

rfs.lo: dev/rfs.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rfs.lo -MD -MP -MF $(DEPDIR)/rfs.Tpo -c -o rfs.lo `test -f 'dev/rfs.cpp' || echo '$(srcdir)/'`dev/rfs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rfs.Tpo $(DEPDIR)/rfs.Plo
#	$(AM_V_CXX)source='dev/rfs.cpp' object='rfs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rfs.lo `test -f 'dev/rfs.cpp' || echo '$(srcdir)/'`dev/rfs.cpp

rfs_uc.lo: dev/rfs_uc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rfs_uc.lo -MD -MP -MF $(DEPDIR)/rfs_uc.Tpo -c -o rfs_uc.lo `test -f 'dev/rfs_uc.cpp' || echo '$(srcdir)/'`dev/rfs_uc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rfs_uc.Tpo $(DEPDIR)/rfs_uc.Plo
#	$(AM_V_CXX)source='dev/rfs_uc.cpp' object='rfs_uc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rfs_uc.lo `test -f 'dev/rfs_uc.cpp' || echo '$(srcdir)/'`dev/rfs_uc.cpp

rfs_uc_tcp_gro.lo: dev/rfs_uc_tcp_gro.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rfs_uc_tcp_gro.lo -MD -MP -MF $(DEPDIR)/rfs_uc_tcp_gro.Tpo -c -o rfs_uc_tcp_gro.lo `test -f 'dev/rfs_uc_tcp_gro.cpp' || echo '$(srcdir)/'`dev/rfs_uc_tcp_gro.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rfs_uc_tcp_gro.Tpo $(DEPDIR)/rfs_uc_tcp_gro.Plo
#	$(AM_V_CXX)source='dev/rfs_uc_tcp_gro.cpp' object='rfs_uc_tcp_gro.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rfs_uc_tcp_gro.lo `test -f 'dev/rfs_uc_tcp_gro.cpp' || echo '$(srcdir)/'`dev/rfs_uc_tcp_gro.cpp

rfs_mc.lo: dev/rfs_mc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rfs_mc.lo -MD -MP -MF $(DEPDIR)/rfs_mc.Tpo -c -o rfs_mc.lo `test -f 'dev/rfs_mc.cpp' || echo '$(srcdir)/'`dev/rfs_mc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rfs_mc.Tpo $(DEPDIR)/rfs_mc.Plo
#	$(AM_V_CXX)source='dev/rfs_mc.cpp' object='rfs_mc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rfs_mc.lo `test -f 'dev/rfs_mc.cpp' || echo '$(srcdir)/'`dev/rfs_mc.cpp

ib_ctx_handler.lo: dev/ib_ctx_handler.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ib_ctx_handler.lo -MD -MP -MF $(DEPDIR)/ib_ctx_handler.Tpo -c -o ib_ctx_handler.lo `test -f 'dev/ib_ctx_handler.cpp' || echo '$(srcdir)/'`dev/ib_ctx_handler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ib_ctx_handler.Tpo $(DEPDIR)/ib_ctx_handler.Plo
#	$(AM_V_CXX)source='dev/ib_ctx_handler.cpp' object='ib_ctx_handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ib_ctx_handler.lo `test -f 'dev/ib_ctx_handler.cpp' || echo '$(srcdir)/'`dev/ib_ctx_handler.cpp

ib_ctx_handler_collection.lo: dev/ib_ctx_handler_collection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ib_ctx_handler_collection.lo -MD -MP -MF $(DEPDIR)/ib_ctx_handler_collection.Tpo -c -o ib_ctx_handler_collection.lo `test -f 'dev/ib_ctx_handler_collection.cpp' || echo '$(srcdir)/'`dev/ib_ctx_handler_collection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ib_ctx_handler_collection.Tpo $(DEPDIR)/ib_ctx_handler_collection.Plo
#	$(AM_V_CXX)source='dev/ib_ctx_handler_collection.cpp' object='ib_ctx_handler_collection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ib_ctx_handler_collection.lo `test -f 'dev/ib_ctx_handler_collection.cpp' || echo '$(srcdir)/'`dev/ib_ctx_handler_collection.cpp

net_device_val.lo: dev/net_device_val.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT net_device_val.lo -MD -MP -MF $(DEPDIR)/net_device_val.Tpo -c -o net_device_val.lo `test -f 'dev/net_device_val.cpp' || echo '$(srcdir)/'`dev/net_device_val.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/net_device_val.Tpo $(DEPDIR)/net_device_val.Plo
#	$(AM_V_CXX)source='dev/net_device_val.cpp' object='net_device_val.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net_device_val.lo `test -f 'dev/net_device_val.cpp' || echo '$(srcdir)/'`dev/net_device_val.cpp

net_device_entry.lo: dev/net_device_entry.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT net_device_entry.lo -MD -MP -MF $(DEPDIR)/net_device_entry.Tpo -c -o net_device_entry.lo `test -f 'dev/net_device_entry.cpp' || echo '$(srcdir)/'`dev/net_device_entry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/net_device_entry.Tpo $(DEPDIR)/net_device_entry.Plo
#	$(AM_V_CXX)source='dev/net_device_entry.cpp' object='net_device_entry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net_device_entry.lo `test -f 'dev/net_device_entry.cpp' || echo '$(srcdir)/'`dev/net_device_entry.cpp

net_device_table_mgr.lo: dev/net_device_table_mgr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT net_device_table_mgr.lo -MD -MP -MF $(DEPDIR)/net_device_table_mgr.Tpo -c -o net_device_table_mgr.lo `test -f 'dev/net_device_table_mgr.cpp' || echo '$(srcdir)/'`dev/net_device_table_mgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/net_device_table_mgr.Tpo $(DEPDIR)/net_device_table_mgr.Plo
#	$(AM_V_CXX)source='dev/net_device_table_mgr.cpp' object='net_device_table_mgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net_device_table_mgr.lo `test -f 'dev/net_device_table_mgr.cpp' || echo '$(srcdir)/'`dev/net_device_table_mgr.cpp

wqe_send_handler.lo: dev/wqe_send_handler.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wqe_send_handler.lo -MD -MP -MF $(DEPDIR)/wqe_send_handler.Tpo -c -o wqe_send_handler.lo `test -f 'dev/wqe_send_handler.cpp' || echo '$(srcdir)/'`dev/wqe_send_handler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/wqe_send_handler.Tpo $(DEPDIR)/wqe_send_handler.Plo
#	$(AM_V_CXX)source='dev/wqe_send_handler.cpp' object='wqe_send_handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wqe_send_handler.lo `test -f 'dev/wqe_send_handler.cpp' || echo '$(srcdir)/'`dev/wqe_send_handler.cpp

wqe_send_ib_handler.lo: dev/wqe_send_ib_handler.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wqe_send_ib_handler.lo -MD -MP -MF $(DEPDIR)/wqe_send_ib_handler.Tpo -c -o wqe_send_ib_handler.lo `test -f 'dev/wqe_send_ib_handler.cpp' || echo '$(srcdir)/'`dev/wqe_send_ib_handler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/wqe_send_ib_handler.Tpo $(DEPDIR)/wqe_send_ib_handler.Plo
#	$(AM_V_CXX)source='dev/wqe_send_ib_handler.cpp' object='wqe_send_ib_handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wqe_send_ib_handler.lo `test -f 'dev/wqe_send_ib_handler.cpp' || echo '$(srcdir)/'`dev/wqe_send_ib_handler.cpp

delta_timer.lo: event/delta_timer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT delta_timer.lo -MD -MP -MF $(DEPDIR)/delta_timer.Tpo -c -o delta_timer.lo `test -f 'event/delta_timer.cpp' || echo '$(srcdir)/'`event/delta_timer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/delta_timer.Tpo $(DEPDIR)/delta_timer.Plo
#	$(AM_V_CXX)source='event/delta_timer.cpp' object='delta_timer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o delta_timer.lo `test -f 'event/delta_timer.cpp' || echo '$(srcdir)/'`event/delta_timer.cpp

event_handler_manager.lo: event/event_handler_manager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT event_handler_manager.lo -MD -MP -MF $(DEPDIR)/event_handler_manager.Tpo -c -o event_handler_manager.lo `test -f 'event/event_handler_manager.cpp' || echo '$(srcdir)/'`event/event_handler_manager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/event_handler_manager.Tpo $(DEPDIR)/event_handler_manager.Plo
#	$(AM_V_CXX)source='event/event_handler_manager.cpp' object='event_handler_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o event_handler_manager.lo `test -f 'event/event_handler_manager.cpp' || echo '$(srcdir)/'`event/event_handler_manager.cpp

vlogger_timer_handler.lo: event/vlogger_timer_handler.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vlogger_timer_handler.lo -MD -MP -MF $(DEPDIR)/vlogger_timer_handler.Tpo -c -o vlogger_timer_handler.lo `test -f 'event/vlogger_timer_handler.cpp' || echo '$(srcdir)/'`event/vlogger_timer_handler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/vlogger_timer_handler.Tpo $(DEPDIR)/vlogger_timer_handler.Plo
#	$(AM_V_CXX)source='event/vlogger_timer_handler.cpp' object='vlogger_timer_handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vlogger_timer_handler.lo `test -f 'event/vlogger_timer_handler.cpp' || echo '$(srcdir)/'`event/vlogger_timer_handler.cpp

netlink_event.lo: event/netlink_event.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT netlink_event.lo -MD -MP -MF $(DEPDIR)/netlink_event.Tpo -c -o netlink_event.lo `test -f 'event/netlink_event.cpp' || echo '$(srcdir)/'`event/netlink_event.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/netlink_event.Tpo $(DEPDIR)/netlink_event.Plo
#	$(AM_V_CXX)source='event/netlink_event.cpp' object='netlink_event.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o netlink_event.lo `test -f 'event/netlink_event.cpp' || echo '$(srcdir)/'`event/netlink_event.cpp

route_net_dev_event.lo: event/route_net_dev_event.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT route_net_dev_event.lo -MD -MP -MF $(DEPDIR)/route_net_dev_event.Tpo -c -o route_net_dev_event.lo `test -f 'event/route_net_dev_event.cpp' || echo '$(srcdir)/'`event/route_net_dev_event.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/route_net_dev_event.Tpo $(DEPDIR)/route_net_dev_event.Plo
#	$(AM_V_CXX)source='event/route_net_dev_event.cpp' object='route_net_dev_event.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o route_net_dev_event.lo `test -f 'event/route_net_dev_event.cpp' || echo '$(srcdir)/'`event/route_net_dev_event.cpp

epfd_info.lo: iomux/epfd_info.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT epfd_info.lo -MD -MP -MF $(DEPDIR)/epfd_info.Tpo -c -o epfd_info.lo `test -f 'iomux/epfd_info.cpp' || echo '$(srcdir)/'`iomux/epfd_info.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/epfd_info.Tpo $(DEPDIR)/epfd_info.Plo
#	$(AM_V_CXX)source='iomux/epfd_info.cpp' object='epfd_info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o epfd_info.lo `test -f 'iomux/epfd_info.cpp' || echo '$(srcdir)/'`iomux/epfd_info.cpp

epoll_wait_call.lo: iomux/epoll_wait_call.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT epoll_wait_call.lo -MD -MP -MF $(DEPDIR)/epoll_wait_call.Tpo -c -o epoll_wait_call.lo `test -f 'iomux/epoll_wait_call.cpp' || echo '$(srcdir)/'`iomux/epoll_wait_call.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/epoll_wait_call.Tpo $(DEPDIR)/epoll_wait_call.Plo
#	$(AM_V_CXX)source='iomux/epoll_wait_call.cpp' object='epoll_wait_call.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o epoll_wait_call.lo `test -f 'iomux/epoll_wait_call.cpp' || echo '$(srcdir)/'`iomux/epoll_wait_call.cpp

io_mux_call.lo: iomux/io_mux_call.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT io_mux_call.lo -MD -MP -MF $(DEPDIR)/io_mux_call.Tpo -c -o io_mux_call.lo `test -f 'iomux/io_mux_call.cpp' || echo '$(srcdir)/'`iomux/io_mux_call.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/io_mux_call.Tpo $(DEPDIR)/io_mux_call.Plo
#	$(AM_V_CXX)source='iomux/io_mux_call.cpp' object='io_mux_call.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o io_mux_call.lo `test -f 'iomux/io_mux_call.cpp' || echo '$(srcdir)/'`iomux/io_mux_call.cpp

poll_call.lo: iomux/poll_call.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT poll_call.lo -MD -MP -MF $(DEPDIR)/poll_call.Tpo -c -o poll_call.lo `test -f 'iomux/poll_call.cpp' || echo '$(srcdir)/'`iomux/poll_call.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/poll_call.Tpo $(DEPDIR)/poll_call.Plo
#	$(AM_V_CXX)source='iomux/poll_call.cpp' object='poll_call.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o poll_call.lo `test -f 'iomux/poll_call.cpp' || echo '$(srcdir)/'`iomux/poll_call.cpp

select_call.lo: iomux/select_call.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT select_call.lo -MD -MP -MF $(DEPDIR)/select_call.Tpo -c -o select_call.lo `test -f 'iomux/select_call.cpp' || echo '$(srcdir)/'`iomux/select_call.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/select_call.Tpo $(DEPDIR)/select_call.Plo
#	$(AM_V_CXX)source='iomux/select_call.cpp' object='select_call.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o select_call.lo `test -f 'iomux/select_call.cpp' || echo '$(srcdir)/'`iomux/select_call.cpp

ip_frag.lo: proto/ip_frag.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ip_frag.lo -MD -MP -MF $(DEPDIR)/ip_frag.Tpo -c -o ip_frag.lo `test -f 'proto/ip_frag.cpp' || echo '$(srcdir)/'`proto/ip_frag.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ip_frag.Tpo $(DEPDIR)/ip_frag.Plo
#	$(AM_V_CXX)source='proto/ip_frag.cpp' object='ip_frag.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ip_frag.lo `test -f 'proto/ip_frag.cpp' || echo '$(srcdir)/'`proto/ip_frag.cpp

flow_tuple.lo: proto/flow_tuple.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flow_tuple.lo -MD -MP -MF $(DEPDIR)/flow_tuple.Tpo -c -o flow_tuple.lo `test -f 'proto/flow_tuple.cpp' || echo '$(srcdir)/'`proto/flow_tuple.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/flow_tuple.Tpo $(DEPDIR)/flow_tuple.Plo
#	$(AM_V_CXX)source='proto/flow_tuple.cpp' object='flow_tuple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flow_tuple.lo `test -f 'proto/flow_tuple.cpp' || echo '$(srcdir)/'`proto/flow_tuple.cpp

vma_lwip.lo: proto/vma_lwip.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vma_lwip.lo -MD -MP -MF $(DEPDIR)/vma_lwip.Tpo -c -o vma_lwip.lo `test -f 'proto/vma_lwip.cpp' || echo '$(srcdir)/'`proto/vma_lwip.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/vma_lwip.Tpo $(DEPDIR)/vma_lwip.Plo
#	$(AM_V_CXX)source='proto/vma_lwip.cpp' object='vma_lwip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vma_lwip.lo `test -f 'proto/vma_lwip.cpp' || echo '$(srcdir)/'`proto/vma_lwip.cpp

neighbour.lo: proto/neighbour.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT neighbour.lo -MD -MP -MF $(DEPDIR)/neighbour.Tpo -c -o neighbour.lo `test -f 'proto/neighbour.cpp' || echo '$(srcdir)/'`proto/neighbour.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/neighbour.Tpo $(DEPDIR)/neighbour.Plo
#	$(AM_V_CXX)source='proto/neighbour.cpp' object='neighbour.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o neighbour.lo `test -f 'proto/neighbour.cpp' || echo '$(srcdir)/'`proto/neighbour.cpp

neighbour_table_mgr.lo: proto/neighbour_table_mgr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT neighbour_table_mgr.lo -MD -MP -MF $(DEPDIR)/neighbour_table_mgr.Tpo -c -o neighbour_table_mgr.lo `test -f 'proto/neighbour_table_mgr.cpp' || echo '$(srcdir)/'`proto/neighbour_table_mgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/neighbour_table_mgr.Tpo $(DEPDIR)/neighbour_table_mgr.Plo
#	$(AM_V_CXX)source='proto/neighbour_table_mgr.cpp' object='neighbour_table_mgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o neighbour_table_mgr.lo `test -f 'proto/neighbour_table_mgr.cpp' || echo '$(srcdir)/'`proto/neighbour_table_mgr.cpp

L2_address.lo: proto/L2_address.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT L2_address.lo -MD -MP -MF $(DEPDIR)/L2_address.Tpo -c -o L2_address.lo `test -f 'proto/L2_address.cpp' || echo '$(srcdir)/'`proto/L2_address.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/L2_address.Tpo $(DEPDIR)/L2_address.Plo
#	$(AM_V_CXX)source='proto/L2_address.cpp' object='L2_address.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o L2_address.lo `test -f 'proto/L2_address.cpp' || echo '$(srcdir)/'`proto/L2_address.cpp

route_table_mgr.lo: proto/route_table_mgr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT route_table_mgr.lo -MD -MP -MF $(DEPDIR)/route_table_mgr.Tpo -c -o route_table_mgr.lo `test -f 'proto/route_table_mgr.cpp' || echo '$(srcdir)/'`proto/route_table_mgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/route_table_mgr.Tpo $(DEPDIR)/route_table_mgr.Plo
#	$(AM_V_CXX)source='proto/route_table_mgr.cpp' object='route_table_mgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o route_table_mgr.lo `test -f 'proto/route_table_mgr.cpp' || echo '$(srcdir)/'`proto/route_table_mgr.cpp

route_entry.lo: proto/route_entry.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT route_entry.lo -MD -MP -MF $(DEPDIR)/route_entry.Tpo -c -o route_entry.lo `test -f 'proto/route_entry.cpp' || echo '$(srcdir)/'`proto/route_entry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/route_entry.Tpo $(DEPDIR)/route_entry.Plo
#	$(AM_V_CXX)source='proto/route_entry.cpp' object='route_entry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o route_entry.lo `test -f 'proto/route_entry.cpp' || echo '$(srcdir)/'`proto/route_entry.cpp

route_val.lo: proto/route_val.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT route_val.lo -MD -MP -MF $(DEPDIR)/route_val.Tpo -c -o route_val.lo `test -f 'proto/route_val.cpp' || echo '$(srcdir)/'`proto/route_val.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/route_val.Tpo $(DEPDIR)/route_val.Plo
#	$(AM_V_CXX)source='proto/route_val.cpp' object='route_val.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o route_val.lo `test -f 'proto/route_val.cpp' || echo '$(srcdir)/'`proto/route_val.cpp

rule_table_mgr.lo: proto/rule_table_mgr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rule_table_mgr.lo -MD -MP -MF $(DEPDIR)/rule_table_mgr.Tpo -c -o rule_table_mgr.lo `test -f 'proto/rule_table_mgr.cpp' || echo '$(srcdir)/'`proto/rule_table_mgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rule_table_mgr.Tpo $(DEPDIR)/rule_table_mgr.Plo
#	$(AM_V_CXX)source='proto/rule_table_mgr.cpp' object='rule_table_mgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rule_table_mgr.lo `test -f 'proto/rule_table_mgr.cpp' || echo '$(srcdir)/'`proto/rule_table_mgr.cpp

rule_entry.lo: proto/rule_entry.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rule_entry.lo -MD -MP -MF $(DEPDIR)/rule_entry.Tpo -c -o rule_entry.lo `test -f 'proto/rule_entry.cpp' || echo '$(srcdir)/'`proto/rule_entry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rule_entry.Tpo $(DEPDIR)/rule_entry.Plo
#	$(AM_V_CXX)source='proto/rule_entry.cpp' object='rule_entry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rule_entry.lo `test -f 'proto/rule_entry.cpp' || echo '$(srcdir)/'`proto/rule_entry.cpp

rule_val.lo: proto/rule_val.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rule_val.lo -MD -MP -MF $(DEPDIR)/rule_val.Tpo -c -o rule_val.lo `test -f 'proto/rule_val.cpp' || echo '$(srcdir)/'`proto/rule_val.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rule_val.Tpo $(DEPDIR)/rule_val.Plo
#	$(AM_V_CXX)source='proto/rule_val.cpp' object='rule_val.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rule_val.lo `test -f 'proto/rule_val.cpp' || echo '$(srcdir)/'`proto/rule_val.cpp

dst_entry.lo: proto/dst_entry.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dst_entry.lo -MD -MP -MF $(DEPDIR)/dst_entry.Tpo -c -o dst_entry.lo `test -f 'proto/dst_entry.cpp' || echo '$(srcdir)/'`proto/dst_entry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dst_entry.Tpo $(DEPDIR)/dst_entry.Plo
#	$(AM_V_CXX)source='proto/dst_entry.cpp' object='dst_entry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dst_entry.lo `test -f 'proto/dst_entry.cpp' || echo '$(srcdir)/'`proto/dst_entry.cpp

dst_entry_udp.lo: proto/dst_entry_udp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dst_entry_udp.lo -MD -MP -MF $(DEPDIR)/dst_entry_udp.Tpo -c -o dst_entry_udp.lo `test -f 'proto/dst_entry_udp.cpp' || echo '$(srcdir)/'`proto/dst_entry_udp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dst_entry_udp.Tpo $(DEPDIR)/dst_entry_udp.Plo
#	$(AM_V_CXX)source='proto/dst_entry_udp.cpp' object='dst_entry_udp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dst_entry_udp.lo `test -f 'proto/dst_entry_udp.cpp' || echo '$(srcdir)/'`proto/dst_entry_udp.cpp

dst_entry_udp_mc.lo: proto/dst_entry_udp_mc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dst_entry_udp_mc.lo -MD -MP -MF $(DEPDIR)/dst_entry_udp_mc.Tpo -c -o dst_entry_udp_mc.lo `test -f 'proto/dst_entry_udp_mc.cpp' || echo '$(srcdir)/'`proto/dst_entry_udp_mc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dst_entry_udp_mc.Tpo $(DEPDIR)/dst_entry_udp_mc.Plo
#	$(AM_V_CXX)source='proto/dst_entry_udp_mc.cpp' object='dst_entry_udp_mc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dst_entry_udp_mc.lo `test -f 'proto/dst_entry_udp_mc.cpp' || echo '$(srcdir)/'`proto/dst_entry_udp_mc.cpp

dst_entry_tcp.lo: proto/dst_entry_tcp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dst_entry_tcp.lo -MD -MP -MF $(DEPDIR)/dst_entry_tcp.Tpo -c -o dst_entry_tcp.lo `test -f 'proto/dst_entry_tcp.cpp' || echo '$(srcdir)/'`proto/dst_entry_tcp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dst_entry_tcp.Tpo $(DEPDIR)/dst_entry_tcp.Plo
#	$(AM_V_CXX)source='proto/dst_entry_tcp.cpp' object='dst_entry_tcp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dst_entry_tcp.lo `test -f 'proto/dst_entry_tcp.cpp' || echo '$(srcdir)/'`proto/dst_entry_tcp.cpp

header.lo: proto/header.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT header.lo -MD -MP -MF $(DEPDIR)/header.Tpo -c -o header.lo `test -f 'proto/header.cpp' || echo '$(srcdir)/'`proto/header.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/header.Tpo $(DEPDIR)/header.Plo
#	$(AM_V_CXX)source='proto/header.cpp' object='header.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o header.lo `test -f 'proto/header.cpp' || echo '$(srcdir)/'`proto/header.cpp

arp.lo: proto/arp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arp.lo -MD -MP -MF $(DEPDIR)/arp.Tpo -c -o arp.lo `test -f 'proto/arp.cpp' || echo '$(srcdir)/'`proto/arp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/arp.Tpo $(DEPDIR)/arp.Plo
#	$(AM_V_CXX)source='proto/arp.cpp' object='arp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arp.lo `test -f 'proto/arp.cpp' || echo '$(srcdir)/'`proto/arp.cpp

igmp_mgr.lo: proto/igmp_mgr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT igmp_mgr.lo -MD -MP -MF $(DEPDIR)/igmp_mgr.Tpo -c -o igmp_mgr.lo `test -f 'proto/igmp_mgr.cpp' || echo '$(srcdir)/'`proto/igmp_mgr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/igmp_mgr.Tpo $(DEPDIR)/igmp_mgr.Plo
#	$(AM_V_CXX)source='proto/igmp_mgr.cpp' object='igmp_mgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o igmp_mgr.lo `test -f 'proto/igmp_mgr.cpp' || echo '$(srcdir)/'`proto/igmp_mgr.cpp

igmp_handler.lo: proto/igmp_handler.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT igmp_handler.lo -MD -MP -MF $(DEPDIR)/igmp_handler.Tpo -c -o igmp_handler.lo `test -f 'proto/igmp_handler.cpp' || echo '$(srcdir)/'`proto/igmp_handler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/igmp_handler.Tpo $(DEPDIR)/igmp_handler.Plo
#	$(AM_V_CXX)source='proto/igmp_handler.cpp' object='igmp_handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o igmp_handler.lo `test -f 'proto/igmp_handler.cpp' || echo '$(srcdir)/'`proto/igmp_handler.cpp

sockinfo.lo: sock/sockinfo.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sockinfo.lo -MD -MP -MF $(DEPDIR)/sockinfo.Tpo -c -o sockinfo.lo `test -f 'sock/sockinfo.cpp' || echo '$(srcdir)/'`sock/sockinfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sockinfo.Tpo $(DEPDIR)/sockinfo.Plo
#	$(AM_V_CXX)source='sock/sockinfo.cpp' object='sockinfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sockinfo.lo `test -f 'sock/sockinfo.cpp' || echo '$(srcdir)/'`sock/sockinfo.cpp

sockinfo_udp.lo: sock/sockinfo_udp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sockinfo_udp.lo -MD -MP -MF $(DEPDIR)/sockinfo_udp.Tpo -c -o sockinfo_udp.lo `test -f 'sock/sockinfo_udp.cpp' || echo '$(srcdir)/'`sock/sockinfo_udp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sockinfo_udp.Tpo $(DEPDIR)/sockinfo_udp.Plo
#	$(AM_V_CXX)source='sock/sockinfo_udp.cpp' object='sockinfo_udp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sockinfo_udp.lo `test -f 'sock/sockinfo_udp.cpp' || echo '$(srcdir)/'`sock/sockinfo_udp.cpp

sockinfo_tcp.lo: sock/sockinfo_tcp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sockinfo_tcp.lo -MD -MP -MF $(DEPDIR)/sockinfo_tcp.Tpo -c -o sockinfo_tcp.lo `test -f 'sock/sockinfo_tcp.cpp' || echo '$(srcdir)/'`sock/sockinfo_tcp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sockinfo_tcp.Tpo $(DEPDIR)/sockinfo_tcp.Plo
#	$(AM_V_CXX)source='sock/sockinfo_tcp.cpp' object='sockinfo_tcp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sockinfo_tcp.lo `test -f 'sock/sockinfo_tcp.cpp' || echo '$(srcdir)/'`sock/sockinfo_tcp.cpp

fd_collection.lo: sock/fd_collection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fd_collection.lo -MD -MP -MF $(DEPDIR)/fd_collection.Tpo -c -o fd_collection.lo `test -f 'sock/fd_collection.cpp' || echo '$(srcdir)/'`sock/fd_collection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/fd_collection.Tpo $(DEPDIR)/fd_collection.Plo
#	$(AM_V_CXX)source='sock/fd_collection.cpp' object='fd_collection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fd_collection.lo `test -f 'sock/fd_collection.cpp' || echo '$(srcdir)/'`sock/fd_collection.cpp

pipeinfo.lo: sock/pipeinfo.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pipeinfo.lo -MD -MP -MF $(DEPDIR)/pipeinfo.Tpo -c -o pipeinfo.lo `test -f 'sock/pipeinfo.cpp' || echo '$(srcdir)/'`sock/pipeinfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pipeinfo.Tpo $(DEPDIR)/pipeinfo.Plo
#	$(AM_V_CXX)source='sock/pipeinfo.cpp' object='pipeinfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pipeinfo.lo `test -f 'sock/pipeinfo.cpp' || echo '$(srcdir)/'`sock/pipeinfo.cpp

socket_fd_api.lo: sock/socket_fd_api.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT socket_fd_api.lo -MD -MP -MF $(DEPDIR)/socket_fd_api.Tpo -c -o socket_fd_api.lo `test -f 'sock/socket_fd_api.cpp' || echo '$(srcdir)/'`sock/socket_fd_api.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/socket_fd_api.Tpo $(DEPDIR)/socket_fd_api.Plo
#	$(AM_V_CXX)source='sock/socket_fd_api.cpp' object='socket_fd_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o socket_fd_api.lo `test -f 'sock/socket_fd_api.cpp' || echo '$(srcdir)/'`sock/socket_fd_api.cpp

sock-redirect.lo: sock/sock-redirect.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sock-redirect.lo -MD -MP -MF $(DEPDIR)/sock-redirect.Tpo -c -o sock-redirect.lo `test -f 'sock/sock-redirect.cpp' || echo '$(srcdir)/'`sock/sock-redirect.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sock-redirect.Tpo $(DEPDIR)/sock-redirect.Plo
#	$(AM_V_CXX)source='sock/sock-redirect.cpp' object='sock-redirect.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sock-redirect.lo `test -f 'sock/sock-redirect.cpp' || echo '$(srcdir)/'`sock/sock-redirect.cpp

subject_observer.lo: infra/subject_observer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT subject_observer.lo -MD -MP -MF $(DEPDIR)/subject_observer.Tpo -c -o subject_observer.lo `test -f 'infra/subject_observer.cpp' || echo '$(srcdir)/'`infra/subject_observer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/subject_observer.Tpo $(DEPDIR)/subject_observer.Plo
#	$(AM_V_CXX)source='infra/subject_observer.cpp' object='subject_observer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o subject_observer.lo `test -f 'infra/subject_observer.cpp' || echo '$(srcdir)/'`infra/subject_observer.cpp

sender.lo: infra/sender.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sender.lo -MD -MP -MF $(DEPDIR)/sender.Tpo -c -o sender.lo `test -f 'infra/sender.cpp' || echo '$(srcdir)/'`infra/sender.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sender.Tpo $(DEPDIR)/sender.Plo
#	$(AM_V_CXX)source='infra/sender.cpp' object='sender.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sender.lo `test -f 'infra/sender.cpp' || echo '$(srcdir)/'`infra/sender.cpp

wakeup.lo: util/wakeup.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wakeup.lo -MD -MP -MF $(DEPDIR)/wakeup.Tpo -c -o wakeup.lo `test -f 'util/wakeup.cpp' || echo '$(srcdir)/'`util/wakeup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/wakeup.Tpo $(DEPDIR)/wakeup.Plo
#	$(AM_V_CXX)source='util/wakeup.cpp' object='wakeup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wakeup.lo `test -f 'util/wakeup.cpp' || echo '$(srcdir)/'`util/wakeup.cpp

match.lo: util/match.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT match.lo -MD -MP -MF $(DEPDIR)/match.Tpo -c -o match.lo `test -f 'util/match.cpp' || echo '$(srcdir)/'`util/match.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/match.Tpo $(DEPDIR)/match.Plo
#	$(AM_V_CXX)source='util/match.cpp' object='match.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o match.lo `test -f 'util/match.cpp' || echo '$(srcdir)/'`util/match.cpp

utils.lo: util/utils.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils.lo -MD -MP -MF $(DEPDIR)/utils.Tpo -c -o utils.lo `test -f 'util/utils.cpp' || echo '$(srcdir)/'`util/utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/utils.Tpo $(DEPDIR)/utils.Plo
#	$(AM_V_CXX)source='util/utils.cpp' object='utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils.lo `test -f 'util/utils.cpp' || echo '$(srcdir)/'`util/utils.cpp

verbs_extra.lo: util/verbs_extra.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT verbs_extra.lo -MD -MP -MF $(DEPDIR)/verbs_extra.Tpo -c -o verbs_extra.lo `test -f 'util/verbs_extra.cpp' || echo '$(srcdir)/'`util/verbs_extra.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/verbs_extra.Tpo $(DEPDIR)/verbs_extra.Plo
#	$(AM_V_CXX)source='util/verbs_extra.cpp' object='verbs_extra.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o verbs_extra.lo `test -f 'util/verbs_extra.cpp' || echo '$(srcdir)/'`util/verbs_extra.cpp

instrumentation.lo: util/instrumentation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT instrumentation.lo -MD -MP -MF $(DEPDIR)/instrumentation.Tpo -c -o instrumentation.lo `test -f 'util/instrumentation.cpp' || echo '$(srcdir)/'`util/instrumentation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/instrumentation.Tpo $(DEPDIR)/instrumentation.Plo
#	$(AM_V_CXX)source='util/instrumentation.cpp' object='instrumentation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o instrumentation.lo `test -f 'util/instrumentation.cpp' || echo '$(srcdir)/'`util/instrumentation.cpp

stats_publisher.lo: ../stats/stats_publisher.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stats_publisher.lo -MD -MP -MF $(DEPDIR)/stats_publisher.Tpo -c -o stats_publisher.lo `test -f '../stats/stats_publisher.cpp' || echo '$(srcdir)/'`../stats/stats_publisher.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/stats_publisher.Tpo $(DEPDIR)/stats_publisher.Plo
#	$(AM_V_CXX)source='../stats/stats_publisher.cpp' object='stats_publisher.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stats_publisher.lo `test -f '../stats/stats_publisher.cpp' || echo '$(srcdir)/'`../stats/stats_publisher.cpp

stats_printer.lo: ../stats/stats_printer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stats_printer.lo -MD -MP -MF $(DEPDIR)/stats_printer.Tpo -c -o stats_printer.lo `test -f '../stats/stats_printer.cpp' || echo '$(srcdir)/'`../stats/stats_printer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/stats_printer.Tpo $(DEPDIR)/stats_printer.Plo
#	$(AM_V_CXX)source='../stats/stats_printer.cpp' object='stats_printer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stats_printer.lo `test -f '../stats/stats_printer.cpp' || echo '$(srcdir)/'`../stats/stats_printer.cpp

netlink_wrapper.lo: netlink/netlink_wrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT netlink_wrapper.lo -MD -MP -MF $(DEPDIR)/netlink_wrapper.Tpo -c -o netlink_wrapper.lo `test -f 'netlink/netlink_wrapper.cpp' || echo '$(srcdir)/'`netlink/netlink_wrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/netlink_wrapper.Tpo $(DEPDIR)/netlink_wrapper.Plo
#	$(AM_V_CXX)source='netlink/netlink_wrapper.cpp' object='netlink_wrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o netlink_wrapper.lo `test -f 'netlink/netlink_wrapper.cpp' || echo '$(srcdir)/'`netlink/netlink_wrapper.cpp

neigh_info.lo: netlink/neigh_info.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT neigh_info.lo -MD -MP -MF $(DEPDIR)/neigh_info.Tpo -c -o neigh_info.lo `test -f 'netlink/neigh_info.cpp' || echo '$(srcdir)/'`netlink/neigh_info.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/neigh_info.Tpo $(DEPDIR)/neigh_info.Plo
#	$(AM_V_CXX)source='netlink/neigh_info.cpp' object='neigh_info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o neigh_info.lo `test -f 'netlink/neigh_info.cpp' || echo '$(srcdir)/'`netlink/neigh_info.cpp

link_info.lo: netlink/link_info.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT link_info.lo -MD -MP -MF $(DEPDIR)/link_info.Tpo -c -o link_info.lo `test -f 'netlink/link_info.cpp' || echo '$(srcdir)/'`netlink/link_info.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/link_info.Tpo $(DEPDIR)/link_info.Plo
#	$(AM_V_CXX)source='netlink/link_info.cpp' object='link_info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o link_info.lo `test -f 'netlink/link_info.cpp' || echo '$(srcdir)/'`netlink/link_info.cpp

route_info.lo: netlink/route_info.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT route_info.lo -MD -MP -MF $(DEPDIR)/route_info.Tpo -c -o route_info.lo `test -f 'netlink/route_info.cpp' || echo '$(srcdir)/'`netlink/route_info.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/route_info.Tpo $(DEPDIR)/route_info.Plo
#	$(AM_V_CXX)source='netlink/route_info.cpp' object='route_info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o route_info.lo `test -f 'netlink/route_info.cpp' || echo '$(srcdir)/'`netlink/route_info.cpp

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

config_scanner.c: util/config_scanner.l
	$(AM_V_LEX) \
	$(am__skiplex) \
	$(SHELL) $(YLWRAP) `test -f 'util/config_scanner.l' || echo '$(srcdir)/'`util/config_scanner.l $(LEX_OUTPUT_ROOT).c config_scanner.c -- $(LEX) $(AM_LFLAGS) $(LFLAGS)

.y.c:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

config_parser.c: util/config_parser.y
	$(AM_V_YACC) \
	$(am__skipyacc) \
	$(SHELL) $(YLWRAP) `test -f 'util/config_parser.y' || echo '$(srcdir)/'`util/config_parser.y y.tab.c config_parser.c y.tab.h `echo config_parser.c | $(am__yacc_c2h)` y.output config_parser.output -- $(YACC) $(AM_YFLAGS) $(YFLAGS)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-sysconfDATA: $(sysconf_DATA)
	@$(NORMAL_INSTALL)
	@list='$(sysconf_DATA)'; test -n "$(sysconfdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sysconfdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sysconfdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(sysconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(sysconfdir)" || exit $$?; \
	done

uninstall-sysconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sysconf_DATA)'; test -n "$(sysconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(sysconfdir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(sysconfdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f config_parser.c
	-rm -f config_parser.h
	-rm -f config_scanner.c
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES install-sysconfDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-sysconfDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: all check install install-am install-exec-am install-strip \
	uninstall-am

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-sysconfDATA installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-hook uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-sysconfDATA


install-exec-hook:
	rm -f $(DESTDIR)$(libdir)/libvma.la
	rm -f $(DESTDIR)$(libdir)/libvma.a
	rm -f $(DESTDIR)$(libdir)/libstate_machine.*
	rm -f $(DESTDIR)$(libdir)/libvlogger.*
	rm -f $(DESTDIR)$(bindir)/state_machine_test
	rm -f $(DESTDIR)$(bindir)/vlogger_test
	echo "$(libdir)" > /etc/ld.so.conf.d/libvma.conf
	/sbin/ldconfig

uninstall-hook:
	rm -f $(DESTDIR)$(libdir)/libvma.so*

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
