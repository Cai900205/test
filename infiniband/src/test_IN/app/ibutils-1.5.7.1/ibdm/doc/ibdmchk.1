.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "IBDMCHK 1"
.TH IBDMCHK 1 "2009-03-17" "IBDM 1.0" "IB DATA MODEL PACKAGE"
.SH "NAME"
\&\fBIBDM \- Network Checker and Attributes Analyzer\fR
.SH "SYNOPSYS"
.IX Header "SYNOPSYS"
ibdmchk has two operation modes: design and verification.
.PP
\&\s-1DESIGN:\s0
.PP
ibdmchk [\-v][\-h][\-u][\-r <roots file>] \-t <topology file> \-n <\s-1SM\s0 Node>
  \-p <\s-1SM\s0 Port> [\-e] [\-l <lmc>]
.PP
\&\s-1VERIFICATION:\s0
.PP
ibdmchk [\-v][\-h][\-r <roots file>] [\-s <subnet file>] [\-f <fdb file>]
  [\-m <mcfdbs file> [\-l <lmc>] [\-u] [\-M] [\-a]
  [\-c <path sl file>] [\-d <sl2vl tables file>]
.SH "DESIGN MODE DESCRIPTION"
.IX Header "DESIGN MODE DESCRIPTION"
The Design mode is intended to be used before the cluster is built. It provides basic checks of the specified network as described by a topology file. After simulating the \s-1SM\s0 \s-1LID\s0 assignment and routing algorithms it provides reports of the (H)CA to (H)CA paths depth histogram and credit deadlock potential in the resulting routing scheme.
.SH "ARGUMENTS:"
.IX Header "ARGUMENTS:"
.RE
.IP "\-t|\-\-topo <topo file>"
.IX Item "-t|--topo <topo file>"
The \fBtopology file\fR specifying the network. See man \fBibdm-topology-file\fR
.RE
.IP "\-n|\-\-node <\s-1SM\s0 Node>"
.IX Item "-n|--node <SM Node>"
The name of the Subnet Manager node (syntax: <Topo\-File\-System>/U1)
.RE
.IP "\-p|\-\-port <\s-1SM\s0 Port>"
.IX Item "-p|--port <SM Port>"
The port number by which the \s-1SM\s0 nodes is attached to the fabric.
.SH "OPTIONS"
.IX Header "OPTIONS"
.RE
.IP "\-v|\-\-verbose"
.IX Item "-v|--verbose"
Verbsoe mode
.RE
.IP "\-h|\-\-help"
.IX Item "-h|--help"
Provides this help message
.RE
.IP "\-l|\-\-lmc <lmc>"
.IX Item "-l|--lmc <lmc>"
\&\s-1LMC\s0 value > 0 means assigning 2^lmc lids to each port.
.RE
.IP "\-e|\-\-enh"
.IX Item "-e|--enh"
Use enhanced routing algorithm when \s-1LMC\s0 > 0 and report the resulting paths correlation (using same system/node) histogram
.RE
.IP "\-r|\-\-roots <roots file> A file with all the roots node names (one on each line)."
.IX Item "-r|--roots <roots file> A file with all the roots node names (one on each line)."
.SH "VERIFICATION MODE DESCRIPTION"
.IX Header "VERIFICATION MODE DESCRIPTION"
After the cluster is built and OpenSM is run (using flag \-D 0x43) it reports the subnet and \s-1FDB\s0 tables into the files osm\-subnet.lst, osm.fdbs and osm.fdbs in /var/log/ (or subnet.lst, osm.fdbs and osm.mcfdbs into /tmp in older OpenSM versions). ibdiagnet is also producing the same files in its output directory.
Based on these files the utility checks all \s-1CA\s0 to \s-1CA\s0 connectivity. Further analysis for credit deadlock potential is performed and reported.
In case of an \s-1LMC\s0 > 0 it reports histograms for how many systems and nodes are common between the different paths for the same port pairs.
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
.RE
.IP "\-l|\-\-lmc <lmc>"
.IX Item "-l|--lmc <lmc>"
The \s-1LMC\s0 value used while running OpenSM. Mandatory if not the default 0.
.SH "OPTIONS"
.IX Header "OPTIONS"
.RE
.IP "\-v|\-\-verbose"
.IX Item "-v|--verbose"
Verbsoe mode
.RE
.IP "\-h|\-\-help"
.IX Item "-h|--help"
Provides this help message
.RE
.IP "\-s|\-\-subnet <file>"
.IX Item "-s|--subnet <file>"
OpenSM subnet.lst file (default is /var/log/osm\-subnet.lst or /tmp/subnet.lst)
.RE
.IP "\-f|\-\-fdb <file>"
.IX Item "-f|--fdb <file>"
OpenSM dump of Ucast \s-1LFDB\s0. Use \-D 0x41 to generate it (default is /var/log/osm.fdbs or /tmp/osm.fdbs).
.RE
.IP "\-m|\-\-mcfdb <file>"
.IX Item "-m|--mcfdb <file>"
OpenSM dump of Multicast \s-1LFDB\s0. Use \-D 0x41 to generate it (default is /var/log/osm.mcfdbs or /tmp/osm.mcfdbs).
.RE
.IP "\-c|\-\-psl <file>"
.IX Item "-c|--psl <file>"
Source Guid to \s-1DLID\s0 \-> Path \s-1SL\s0 mapping.
Each line holds: src_node_guid dlid sl.
Used by the credit loop check to accuartly model \s-1SL/VL\s0 based routing.
.RE
.IP "\-d|\-\-slvl <file>"
.IX Item "-d|--slvl <file>"
\&\s-1SL2VL\s0 mapping of all switces.
Each line holds: swguid iport oport 0x(sl0)(sl1) 0x(sl2)(sl3)...
Used by the credit loop check to accuartly model \s-1SL/VL\s0 based routing.
.RE
.IP "\-r|\-\-roots <roots file>"
.IX Item "-r|--roots <roots file>"
A file holding all root nodes guids (one per line).
.RE
.IP "\-u|\-\-updn"
.IX Item "-u|--updn"
Use Up/Down based credit loop check algorithm instead of the generic one.
.RE
.IP "\-M|\-\-MFT"
.IX Item "-M|--MFT"
Include multicast routing in credit loops analysis.
.RE
.IP "\-a|\-\-all"
.IX Item "-a|--all"
Verify not only CA-CA paths but also \s-1SW\-SW\s0, CA-SW and \s-1SW\-CA\s0.
Both check for \s-1FDB\s0 path connectivity and also for credit loops.
.SH "AUTHOR"
.IX Header "AUTHOR"
Eitan Zahavi, Mellanox Technologies \s-1LTD\s0, eitan@mellanox.co.il
