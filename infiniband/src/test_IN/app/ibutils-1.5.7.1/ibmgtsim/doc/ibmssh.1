.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "IBMSSH 1"
.TH IBMSSH 1 "2008-06-16" "IBMGTSIM 1.0" "IB MANAGEMENT SIMULATOR"
.SH "NAME"
\&\fBibmssh\fR IB MANAGEMENT SIMULATOR \- Extentended TCL shell
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBibmssh\fR is a \s-1TCL\s0 shell extended with interface for the \s-1IB\s0 Management Simulator facilities.
Normally you will not run this shell directly \- but instead it will be invoked by the \fBIBMgtSim\fR utility.
However, in order to write simulation flows that interacts closely with the simulated model, a simulation flow should be provided. This flow is loaded by IBMgtSim and excersize the \s-1API\s0 provided by this shell.
.PP
The following sub sections provide detailed definition for those objects and \s-1API\s0.
.SH "IBMgtSim Constants"
.IX Header "IBMgtSim Constants"
These constants are provided by IBMgtSim
.Sh "Massage Manager Log Verbosity Flags"
.IX Subsection "Massage Manager Log Verbosity Flags"
.ie n .IP "[ Constant : int  ] $MsgShowFatal = 0x01" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowFatal\fR = 0x01" 4
.IX Item "[ Constant : int  ] $MsgShowFatal = 0x01"
.PD 0
.ie n .IP "[ Constant : int  ] $MsgShowError = 0x02" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowError\fR = 0x02" 4
.IX Item "[ Constant : int  ] $MsgShowError = 0x02"
.ie n .IP "[ Constant : int  ] $MsgShowWarning = 0x04" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowWarning\fR = 0x04" 4
.IX Item "[ Constant : int  ] $MsgShowWarning = 0x04"
.ie n .IP "[ Constant : int  ] $MsgShowInfo = 0x08" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowInfo\fR = 0x08" 4
.IX Item "[ Constant : int  ] $MsgShowInfo = 0x08"
.ie n .IP "[ Constant : int  ] $MsgShowVerbose = 0x10" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowVerbose\fR = 0x10" 4
.IX Item "[ Constant : int  ] $MsgShowVerbose = 0x10"
.ie n .IP "[ Constant : int  ] $MsgShowContext = 0x20" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowContext\fR = 0x20" 4
.IX Item "[ Constant : int  ] $MsgShowContext = 0x20"
.ie n .IP "[ Constant : int  ] $MsgShowSource = 0x40" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowSource\fR = 0x40" 4
.IX Item "[ Constant : int  ] $MsgShowSource = 0x40"
.ie n .IP "[ Constant : int  ] $MsgShowTime = 0x80" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowTime\fR = 0x80" 4
.IX Item "[ Constant : int  ] $MsgShowTime = 0x80"
.ie n .IP "[ Constant : int  ] $MsgShowModule = 0x100" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowModule\fR = 0x100" 4
.IX Item "[ Constant : int  ] $MsgShowModule = 0x100"
.ie n .IP "[ Constant : int  ] $MsgShowMads = 0x200" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowMads\fR = 0x200" 4
.IX Item "[ Constant : int  ] $MsgShowMads = 0x200"
.ie n .IP "[ Constant : int  ] $MsgShowFrames = 0x400" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowFrames\fR = 0x400" 4
.IX Item "[ Constant : int  ] $MsgShowFrames = 0x400"
.ie n .IP "[ Constant : int  ] $MsgShowAll = 0xffff" 4
.el .IP "[ Constant : int  ] \f(CW$MsgShowAll\fR = 0xffff" 4
.IX Item "[ Constant : int  ] $MsgShowAll = 0xffff"
.ie n .IP "[ Constant : int  ] $MsgDefault = 0x62f" 4
.el .IP "[ Constant : int  ] \f(CW$MsgDefault\fR = 0x62f" 4
.IX Item "[ Constant : int  ] $MsgDefault = 0x62f"
.PD
.SH "Message Manager Objects"
.IX Header "Message Manager Objects"
.Sh "class msgManager"
.IX Subsection "class msgManager"
.RS 4
This is the Message Manager class
.RE
.IP "[ Member : returns int  ] getVerbLevel ?module?" 4
.IX Item "[ Member : returns int  ] getVerbLevel ?module?"
.PD 0
.IP "[ Member : returns int  ] clrVerbLevel ?module?" 4
.IX Item "[ Member : returns int  ] clrVerbLevel ?module?"
.IP "[ Member : returns void  ] setVerbLevel vl ?module?" 4
.IX Item "[ Member : returns void  ] setVerbLevel vl ?module?"
.IP "[ Member : returns int  ] outstandingMsgCount ?vl?" 4
.IX Item "[ Member : returns int  ] outstandingMsgCount ?vl?"
.IP "[ Member : returns string  ] outstandingMsgs ?vl?" 4
.IX Item "[ Member : returns string  ] outstandingMsgs ?vl?"
.IP "[ Member : returns string  ] getNextMessage" 4
.IX Item "[ Member : returns string  ] getNextMessage"
.IP "[ Member : returns void  ] nullOutstandingMsgs" 4
.IX Item "[ Member : returns void  ] nullOutstandingMsgs"
.IP "[ Member : returns int  ] setLogFile fileName" 4
.IX Item "[ Member : returns int  ] setLogFile fileName"
.PD
.SH "Random Manager Functions"
.IX Header "Random Manager Functions"
.RE
.IP "[ returns float  ] rmRand"
.IX Item "[ returns float  ] rmRand"
obtain a random number in the range 0.0 \- 1.0
.RE
.IP "[ returns int  ] rmSeed seed"
.IX Item "[ returns int  ] rmSeed seed"
initialize the seed for the random manager
.Sh "class ib_node_info_t"
.IX Subsection "class ib_node_info_t"
.IP "[ Member data: returns uint8_t * ] \-base_version" 4
.IX Item "[ Member data: returns uint8_t * ] -base_version"
.PD 0
.IP "[ Member data: returns uint8_t * ] \-class_version" 4
.IX Item "[ Member data: returns uint8_t * ] -class_version"
.IP "[ Member data: returns uint8_t * ] \-node_type" 4
.IX Item "[ Member data: returns uint8_t * ] -node_type"
.IP "[ Member data: returns uint8_t * ] \-num_ports" 4
.IX Item "[ Member data: returns uint8_t * ] -num_ports"
.IP "[ Member data: returns ib_net64_t * ] \-sys_guid" 4
.IX Item "[ Member data: returns ib_net64_t * ] -sys_guid"
.IP "[ Member data: returns ib_net64_t * ] \-node_guid" 4
.IX Item "[ Member data: returns ib_net64_t * ] -node_guid"
.IP "[ Member data: returns ib_net64_t * ] \-port_guid" 4
.IX Item "[ Member data: returns ib_net64_t * ] -port_guid"
.IP "[ Member data: returns ib_net16_t * ] \-partition_cap" 4
.IX Item "[ Member data: returns ib_net16_t * ] -partition_cap"
.IP "[ Member data: returns ib_net16_t * ] \-device_id" 4
.IX Item "[ Member data: returns ib_net16_t * ] -device_id"
.IP "[ Member data: returns ib_net32_t * ] \-revision" 4
.IX Item "[ Member data: returns ib_net32_t * ] -revision"
.IP "[ Member data: returns ib_net32_t * ] \-port_num_vendor_id" 4
.IX Item "[ Member data: returns ib_net32_t * ] -port_num_vendor_id"
.PD
.Sh "class ib_switch_info_t"
.IX Subsection "class ib_switch_info_t"
.IP "[ Member data: returns ib_net16_t * ] \-lin_cap" 4
.IX Item "[ Member data: returns ib_net16_t * ] -lin_cap"
.PD 0
.IP "[ Member data: returns ib_net16_t * ] \-rand_cap" 4
.IX Item "[ Member data: returns ib_net16_t * ] -rand_cap"
.IP "[ Member data: returns ib_net16_t * ] \-mcast_cap" 4
.IX Item "[ Member data: returns ib_net16_t * ] -mcast_cap"
.IP "[ Member data: returns ib_net16_t * ] \-lin_top" 4
.IX Item "[ Member data: returns ib_net16_t * ] -lin_top"
.IP "[ Member data: returns uint8_t * ] \-def_port" 4
.IX Item "[ Member data: returns uint8_t * ] -def_port"
.IP "[ Member data: returns uint8_t * ] \-def_mcast_pri_port" 4
.IX Item "[ Member data: returns uint8_t * ] -def_mcast_pri_port"
.IP "[ Member data: returns uint8_t * ] \-def_mcast_not_port" 4
.IX Item "[ Member data: returns uint8_t * ] -def_mcast_not_port"
.IP "[ Member data: returns uint8_t * ] \-life_state" 4
.IX Item "[ Member data: returns uint8_t * ] -life_state"
.IP "[ Member data: returns ib_net16_t * ] \-lids_per_port" 4
.IX Item "[ Member data: returns ib_net16_t * ] -lids_per_port"
.IP "[ Member data: returns ib_net16_t * ] \-enforce_cap" 4
.IX Item "[ Member data: returns ib_net16_t * ] -enforce_cap"
.IP "[ Member data: returns uint8_t * ] \-flags" 4
.IX Item "[ Member data: returns uint8_t * ] -flags"
.PD
.Sh "class ib_port_info_t"
.IX Subsection "class ib_port_info_t"
.IP "[ Member data: returns ib_net64_t * ] \-m_key" 4
.IX Item "[ Member data: returns ib_net64_t * ] -m_key"
.PD 0
.IP "[ Member data: returns ib_net64_t * ] \-subnet_prefix" 4
.IX Item "[ Member data: returns ib_net64_t * ] -subnet_prefix"
.IP "[ Member data: returns ib_net16_t * ] \-base_lid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -base_lid"
.IP "[ Member data: returns ib_net16_t * ] \-master_sm_base_lid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -master_sm_base_lid"
.IP "[ Member data: returns ib_net32_t * ] \-capability_mask" 4
.IX Item "[ Member data: returns ib_net32_t * ] -capability_mask"
.IP "[ Member data: returns ib_net16_t * ] \-diag_code" 4
.IX Item "[ Member data: returns ib_net16_t * ] -diag_code"
.IP "[ Member data: returns ib_net16_t * ] \-m_key_lease_period" 4
.IX Item "[ Member data: returns ib_net16_t * ] -m_key_lease_period"
.IP "[ Member data: returns uint8_t * ] \-local_port_num" 4
.IX Item "[ Member data: returns uint8_t * ] -local_port_num"
.IP "[ Member data: returns uint8_t * ] \-link_width_enabled" 4
.IX Item "[ Member data: returns uint8_t * ] -link_width_enabled"
.IP "[ Member data: returns uint8_t * ] \-link_width_supported" 4
.IX Item "[ Member data: returns uint8_t * ] -link_width_supported"
.IP "[ Member data: returns uint8_t * ] \-link_width_active" 4
.IX Item "[ Member data: returns uint8_t * ] -link_width_active"
.IP "[ Member data: returns uint8_t * ] \-state_info1" 4
.IX Item "[ Member data: returns uint8_t * ] -state_info1"
.IP "[ Member data: returns uint8_t * ] \-state_info2" 4
.IX Item "[ Member data: returns uint8_t * ] -state_info2"
.PD
LinkSpeedSupported and PortState
.IP "[ Member data: returns uint8_t * ] \-mkey_lmc" 4
.IX Item "[ Member data: returns uint8_t * ] -mkey_lmc"
PortPhysState and LinkDownDefaultState
.IP "[ Member data: returns uint8_t * ] \-link_speed" 4
.IX Item "[ Member data: returns uint8_t * ] -link_speed"
.PD 0
.IP "[ Member data: returns uint8_t * ] \-mtu_smsl" 4
.IX Item "[ Member data: returns uint8_t * ] -mtu_smsl"
.PD
LinkSpeedEnabled and LinkSpeedActive
.IP "[ Member data: returns uint8_t * ] \-vl_cap" 4
.IX Item "[ Member data: returns uint8_t * ] -vl_cap"
.PD 0
.IP "[ Member data: returns uint8_t * ] \-vl_high_limit" 4
.IX Item "[ Member data: returns uint8_t * ] -vl_high_limit"
.PD
VlCap and InitType
.IP "[ Member data: returns uint8_t * ] \-vl_arb_high_cap" 4
.IX Item "[ Member data: returns uint8_t * ] -vl_arb_high_cap"
.PD 0
.IP "[ Member data: returns uint8_t * ] \-vl_arb_low_cap" 4
.IX Item "[ Member data: returns uint8_t * ] -vl_arb_low_cap"
.IP "[ Member data: returns uint8_t * ] \-mtu_cap" 4
.IX Item "[ Member data: returns uint8_t * ] -mtu_cap"
.IP "[ Member data: returns uint8_t * ] \-vl_stall_life" 4
.IX Item "[ Member data: returns uint8_t * ] -vl_stall_life"
.IP "[ Member data: returns uint8_t * ] \-vl_enforce" 4
.IX Item "[ Member data: returns uint8_t * ] -vl_enforce"
.IP "[ Member data: returns ib_net16_t * ] \-m_key_violations" 4
.IX Item "[ Member data: returns ib_net16_t * ] -m_key_violations"
.IP "[ Member data: returns ib_net16_t * ] \-p_key_violations" 4
.IX Item "[ Member data: returns ib_net16_t * ] -p_key_violations"
.IP "[ Member data: returns ib_net16_t * ] \-q_key_violations" 4
.IX Item "[ Member data: returns ib_net16_t * ] -q_key_violations"
.IP "[ Member data: returns uint8_t * ] \-guid_cap" 4
.IX Item "[ Member data: returns uint8_t * ] -guid_cap"
.IP "[ Member data: returns uint8_t * ] \-subnet_timeout" 4
.IX Item "[ Member data: returns uint8_t * ] -subnet_timeout"
.IP "[ Member data: returns uint8_t * ] \-resp_time_value" 4
.IX Item "[ Member data: returns uint8_t * ] -resp_time_value"
.IP "[ Member data: returns uint8_t * ] \-error_threshold" 4
.IX Item "[ Member data: returns uint8_t * ] -error_threshold"
.PD
.Sh "class ib_node_desc_t"
.IX Subsection "class ib_node_desc_t"
.IP "[ Member data: returns uint8_array_t * ] \-description" 4
.IX Item "[ Member data: returns uint8_array_t * ] -description"
Node String is an array of \s-1UTF\-8\s0 character that describes the node in text format
Note that this string is \s-1NOT\s0 \s-1NULL\s0 \s-1TERMINATED\s0!
.Sh "class ib_lft_record_t"
.IX Subsection "class ib_lft_record_t"
.IP "[ Member data: returns ib_net16_t * ] \-lid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -lid"
.PD 0
.IP "[ Member data: returns ib_net16_t * ] \-block_num" 4
.IX Item "[ Member data: returns ib_net16_t * ] -block_num"
.IP "[ Member data: returns uint32_t * ] \-resv0" 4
.IX Item "[ Member data: returns uint32_t * ] -resv0"
.IP "[ Member data: returns uint8_array_t * ] \-lft" 4
.IX Item "[ Member data: returns uint8_array_t * ] -lft"
.PD
.Sh "class ib_pm_counters_t"
.IX Subsection "class ib_pm_counters_t"
.IP "[ Member data: returns ib_mad_t * ] \-mad_header" 4
.IX Item "[ Member data: returns ib_mad_t * ] -mad_header"
.PD 0
.IP "[ Member data: returns uint32_array_t * ] \-reserved0" 4
.IX Item "[ Member data: returns uint32_array_t * ] -reserved0"
.IP "[ Member data: returns uint8_t * ] \-reserved1" 4
.IX Item "[ Member data: returns uint8_t * ] -reserved1"
.IP "[ Member data: returns uint8_t * ] \-port_select" 4
.IX Item "[ Member data: returns uint8_t * ] -port_select"
.IP "[ Member data: returns ib_net16_t * ] \-counter_select" 4
.IX Item "[ Member data: returns ib_net16_t * ] -counter_select"
.IP "[ Member data: returns ib_net16_t * ] \-symbol_error_counter" 4
.IX Item "[ Member data: returns ib_net16_t * ] -symbol_error_counter"
.IP "[ Member data: returns uint8_t * ] \-link_error_recovery_counter" 4
.IX Item "[ Member data: returns uint8_t * ] -link_error_recovery_counter"
.IP "[ Member data: returns uint8_t * ] \-link_down_counter" 4
.IX Item "[ Member data: returns uint8_t * ] -link_down_counter"
.IP "[ Member data: returns ib_net16_t * ] \-port_rcv_errors" 4
.IX Item "[ Member data: returns ib_net16_t * ] -port_rcv_errors"
.IP "[ Member data: returns ib_net16_t * ] \-port_rcv_remote_physical_errors" 4
.IX Item "[ Member data: returns ib_net16_t * ] -port_rcv_remote_physical_errors"
.IP "[ Member data: returns ib_net16_t * ] \-port_rcv_switch_relay_errors" 4
.IX Item "[ Member data: returns ib_net16_t * ] -port_rcv_switch_relay_errors"
.IP "[ Member data: returns ib_net16_t * ] \-port_xmit_discard" 4
.IX Item "[ Member data: returns ib_net16_t * ] -port_xmit_discard"
.IP "[ Member data: returns uint8_t * ] \-port_xmit_constraint_errors" 4
.IX Item "[ Member data: returns uint8_t * ] -port_xmit_constraint_errors"
.IP "[ Member data: returns uint8_t * ] \-port_rcv_constraint_errors" 4
.IX Item "[ Member data: returns uint8_t * ] -port_rcv_constraint_errors"
.IP "[ Member data: returns uint8_t * ] \-reserved2" 4
.IX Item "[ Member data: returns uint8_t * ] -reserved2"
.IP "[ Member data: returns uint8_t * ] \-lli_errors_exc_buf_errors" 4
.IX Item "[ Member data: returns uint8_t * ] -lli_errors_exc_buf_errors"
.IP "[ Member data: returns ib_net16_t * ] \-reserved3" 4
.IX Item "[ Member data: returns ib_net16_t * ] -reserved3"
.IP "[ Member data: returns ib_net16_t * ] \-vl15_dropped" 4
.IX Item "[ Member data: returns ib_net16_t * ] -vl15_dropped"
.IP "[ Member data: returns ib_net32_t * ] \-port_xmit_data" 4
.IX Item "[ Member data: returns ib_net32_t * ] -port_xmit_data"
.IP "[ Member data: returns ib_net32_t * ] \-port_rcv_data" 4
.IX Item "[ Member data: returns ib_net32_t * ] -port_rcv_data"
.IP "[ Member data: returns ib_net32_t * ] \-port_xmit_pkts" 4
.IX Item "[ Member data: returns ib_net32_t * ] -port_xmit_pkts"
.IP "[ Member data: returns ib_net32_t * ] \-port_rcv_pkts" 4
.IX Item "[ Member data: returns ib_net32_t * ] -port_rcv_pkts"
.IP "[ Member data: returns uint32_array_t * ] \-reserved5" 4
.IX Item "[ Member data: returns uint32_array_t * ] -reserved5"
.PD
.SH "IBMgtSim Simulator Objects"
.IX Header "IBMgtSim Simulator Objects"
.Sh "class IBMgtSim"
.IX Subsection "class IBMgtSim"
.IP "[ Member : returns IBFabric * ] getFabric" 4
.IX Item "[ Member : returns IBFabric * ] getFabric"
.PD 0
.IP "[ Member : returns IBMSServer * ] getServer" 4
.IX Item "[ Member : returns IBMSServer * ] getServer"
.IP "[ Member : returns IBMSDispatcher * ] getDispatcher" 4
.IX Item "[ Member : returns IBMSDispatcher * ] getDispatcher"
.IP "[ Member : returns int  ] init topoFileName serverPortNum numWorkers" 4
.IX Item "[ Member : returns int  ] init topoFileName serverPortNum numWorkers"
.PD
.Sh "class IBMSNode"
.IX Subsection "class IBMSNode"
.IP "[ Member : returns IBNode * ] getIBNode" 4
.IX Item "[ Member : returns IBNode * ] getIBNode"
get the IBNode of the IBMSNode
.IP "[ Member : returns int  ] getLinkStatus outPortNum" 4
.IX Item "[ Member : returns int  ] getLinkStatus outPortNum"
get the link status of the given port
.IP "[ Member : returns int  ] setPhyPortErrProfile portNum errProfileIn" 4
.IX Item "[ Member : returns int  ] setPhyPortErrProfile portNum errProfileIn"
set a particular port err profile
.IP "[ Member : returns int  ] getPhyPortErrProfile portNum" 4
.IX Item "[ Member : returns int  ] getPhyPortErrProfile portNum"
get a particular port err profile
.IP "[ Member : returns int  ] setPhyPortPMCounter portNum counterSelect countersVal" 4
.IX Item "[ Member : returns int  ] setPhyPortPMCounter portNum counterSelect countersVal"
set a specific port counter
.IP "[ Member : returns ib_pm_counters_t * ] getPhyPortPMCounter portNum counterSelect get a specific port counter" 4
.IX Item "[ Member : returns ib_pm_counters_t * ] getPhyPortPMCounter portNum counterSelect get a specific port counter"
.PD 0
.IP "[ Member : returns ib_port_info_t * ] getPortInfo portNum" 4
.IX Item "[ Member : returns ib_port_info_t * ] getPortInfo portNum"
.PD
get a specific port info
.IP "[ Member : returns int  ] setLinkStatus portNum newState" 4
.IX Item "[ Member : returns int  ] setLinkStatus portNum newState"
set the Link status including sending trap128
.IP "[ Member : returns ib_node_info_t * ] getNodeInfo" 4
.IX Item "[ Member : returns ib_node_info_t * ] getNodeInfo"
get the node info
.IP "[ Member : returns ib_switch_info_t * ] getSwitchInfo" 4
.IX Item "[ Member : returns ib_switch_info_t * ] getSwitchInfo"
get the switch info
.IP "[ Member : returns ib_pkey_table_t * ] getPKeyTblBlock portNum blockNum" 4
.IX Item "[ Member : returns ib_pkey_table_t * ] getPKeyTblBlock portNum blockNum"
get pkey table block
.IP "[ Member : returns int  ] setPKeyTblBlock portNum blockNum tbl" 4
.IX Item "[ Member : returns int  ] setPKeyTblBlock portNum blockNum tbl"
set pkey table block
.IP "[ Member : returns int  ] setCrSpace startAddr length data" 4
.IX Item "[ Member : returns int  ] setCrSpace startAddr length data"
set \s-1CR\s0 Space Value
.IP "[ Member : returns int  ] getCrSpace startAddr length data" 4
.IX Item "[ Member : returns int  ] getCrSpace startAddr length data"
get \s-1CR\s0 Space Value
.IP "[ Member : returns int  ] getMFTBlock blockIdx portIdx" 4
.IX Item "[ Member : returns int  ] getMFTBlock blockIdx portIdx"
get \s-1MFT\s0 block
.IP "[ Member : returns int  ] setMFTBlock blockIdx portIdx inMftBlock" 4
.IX Item "[ Member : returns int  ] setMFTBlock blockIdx portIdx inMftBlock"
set \s-1MFT\s0 block
.Sh "class madMcMemberRec"
.IX Subsection "class madMcMemberRec"
.IP "[ Constructor: returns madMcMemberRec * ] madMcMemberRec name" 4
.IX Item "[ Constructor: returns madMcMemberRec * ] madMcMemberRec name"
.PD 0
.IP "[ Destructor: returns void  ] rename obj {}" 4
.IX Item "[ Destructor: returns void  ] rename obj {}"
.IP "[ Member data: returns ib_gid_t * ] \-mgid" 4
.IX Item "[ Member data: returns ib_gid_t * ] -mgid"
.IP "[ Member data: returns ib_gid_t * ] \-port_gid" 4
.IX Item "[ Member data: returns ib_gid_t * ] -port_gid"
.IP "[ Member data: returns ib_net32_t * ] \-qkey" 4
.IX Item "[ Member data: returns ib_net32_t * ] -qkey"
.IP "[ Member data: returns ib_net16_t * ] \-mlid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -mlid"
.IP "[ Member data: returns uint8_t * ] \-mtu" 4
.IX Item "[ Member data: returns uint8_t * ] -mtu"
.IP "[ Member data: returns uint8_t * ] \-tclass" 4
.IX Item "[ Member data: returns uint8_t * ] -tclass"
.IP "[ Member data: returns ib_net16_t * ] \-pkey" 4
.IX Item "[ Member data: returns ib_net16_t * ] -pkey"
.IP "[ Member data: returns uint8_t * ] \-rate" 4
.IX Item "[ Member data: returns uint8_t * ] -rate"
.IP "[ Member data: returns uint8_t * ] \-pkt_life" 4
.IX Item "[ Member data: returns uint8_t * ] -pkt_life"
.IP "[ Member data: returns ib_net32_t * ] \-sl_flow_hop" 4
.IX Item "[ Member data: returns ib_net32_t * ] -sl_flow_hop"
.IP "[ Member data: returns uint8_t * ] \-scope_state" 4
.IX Item "[ Member data: returns uint8_t * ] -scope_state"
.IP "[ Member : returns int  ] send_set pFromNode fromPort destLid comp_mask" 4
.IX Item "[ Member : returns int  ] send_set pFromNode fromPort destLid comp_mask"
.IP "[ Member : returns int  ] send_get pFromNode fromPort destLid comp_mask" 4
.IX Item "[ Member : returns int  ] send_get pFromNode fromPort destLid comp_mask"
.IP "[ Member : returns int  ] send_del pFromNode fromPort destLid comp_mask" 4
.IX Item "[ Member : returns int  ] send_del pFromNode fromPort destLid comp_mask"
.PD
.Sh "class madPathRec"
.IX Subsection "class madPathRec"
.IP "[ Constructor: returns madPathRec * ] madPathRec name" 4
.IX Item "[ Constructor: returns madPathRec * ] madPathRec name"
.PD 0
.IP "[ Destructor: returns void  ] rename obj {}" 4
.IX Item "[ Destructor: returns void  ] rename obj {}"
.IP "[ Member data: returns uint8_array_t * ] \-resv0" 4
.IX Item "[ Member data: returns uint8_array_t * ] -resv0"
.IP "[ Member data: returns ib_gid_t * ] \-dgid" 4
.IX Item "[ Member data: returns ib_gid_t * ] -dgid"
.IP "[ Member data: returns ib_gid_t * ] \-sgid" 4
.IX Item "[ Member data: returns ib_gid_t * ] -sgid"
.IP "[ Member data: returns ib_net16_t * ] \-dlid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -dlid"
.IP "[ Member data: returns ib_net16_t * ] \-slid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -slid"
.IP "[ Member data: returns ib_net32_t * ] \-hop_flow_raw" 4
.IX Item "[ Member data: returns ib_net32_t * ] -hop_flow_raw"
.IP "[ Member data: returns uint8_t * ] \-tclass" 4
.IX Item "[ Member data: returns uint8_t * ] -tclass"
.IP "[ Member data: returns uint8_t * ] \-num_path" 4
.IX Item "[ Member data: returns uint8_t * ] -num_path"
.IP "[ Member data: returns ib_net16_t * ] \-pkey" 4
.IX Item "[ Member data: returns ib_net16_t * ] -pkey"
.IP "[ Member data: returns ib_net16_t * ] \-sl" 4
.IX Item "[ Member data: returns ib_net16_t * ] -sl"
.IP "[ Member data: returns uint8_t * ] \-mtu" 4
.IX Item "[ Member data: returns uint8_t * ] -mtu"
.IP "[ Member data: returns uint8_t * ] \-rate" 4
.IX Item "[ Member data: returns uint8_t * ] -rate"
.IP "[ Member data: returns uint8_t * ] \-pkt_life" 4
.IX Item "[ Member data: returns uint8_t * ] -pkt_life"
.IP "[ Member data: returns uint8_t * ] \-preference" 4
.IX Item "[ Member data: returns uint8_t * ] -preference"
.IP "[ Member data: returns uint8_array_t * ] \-resv2" 4
.IX Item "[ Member data: returns uint8_array_t * ] -resv2"
.IP "[ Member : returns int  ] send_get pFromNode fromPort destLid comp_mask" 4
.IX Item "[ Member : returns int  ] send_get pFromNode fromPort destLid comp_mask"
.PD
.Sh "class madServiceRec"
.IX Subsection "class madServiceRec"
.IP "[ Constructor: returns madServiceRec * ] madServiceRec name" 4
.IX Item "[ Constructor: returns madServiceRec * ] madServiceRec name"
.PD 0
.IP "[ Destructor: returns void  ] rename obj {}" 4
.IX Item "[ Destructor: returns void  ] rename obj {}"
.IP "[ Member data: returns ib_net64_t * ] \-service_id" 4
.IX Item "[ Member data: returns ib_net64_t * ] -service_id"
.IP "[ Member data: returns ib_gid_t * ] \-service_gid" 4
.IX Item "[ Member data: returns ib_gid_t * ] -service_gid"
.IP "[ Member data: returns ib_net16_t * ] \-service_pkey" 4
.IX Item "[ Member data: returns ib_net16_t * ] -service_pkey"
.IP "[ Member data: returns ib_net16_t * ] \-resv" 4
.IX Item "[ Member data: returns ib_net16_t * ] -resv"
.IP "[ Member data: returns ib_net32_t * ] \-service_lease" 4
.IX Item "[ Member data: returns ib_net32_t * ] -service_lease"
.IP "[ Member data: returns uint8_array_t * ] \-service_key" 4
.IX Item "[ Member data: returns uint8_array_t * ] -service_key"
.IP "[ Member data: returns uint8_array_t * ] \-service_name" 4
.IX Item "[ Member data: returns uint8_array_t * ] -service_name"
.IP "[ Member data: returns uint8_array_t * ] \-service_data8" 4
.IX Item "[ Member data: returns uint8_array_t * ] -service_data8"
.IP "[ Member data: returns uint16_array_t * ] \-service_data16" 4
.IX Item "[ Member data: returns uint16_array_t * ] -service_data16"
.IP "[ Member data: returns uint32_array_t * ] \-service_data32" 4
.IX Item "[ Member data: returns uint32_array_t * ] -service_data32"
.IP "[ Member data: returns uint64_array_t * ] \-service_data64" 4
.IX Item "[ Member data: returns uint64_array_t * ] -service_data64"
.IP "[ Member : returns int  ] send_set pFromNode fromPort destLid comp_mask" 4
.IX Item "[ Member : returns int  ] send_set pFromNode fromPort destLid comp_mask"
.IP "[ Member : returns int  ] send_get pFromNode fromPort destLid comp_mask" 4
.IX Item "[ Member : returns int  ] send_get pFromNode fromPort destLid comp_mask"
.IP "[ Member : returns int  ] send_del pFromNode fromPort destLid comp_mask" 4
.IX Item "[ Member : returns int  ] send_del pFromNode fromPort destLid comp_mask"
.PD
.Sh "class madNotice128"
.IX Subsection "class madNotice128"
.IP "[ Constructor: returns madNotice128 * ] madNotice128 name" 4
.IX Item "[ Constructor: returns madNotice128 * ] madNotice128 name"
.PD 0
.IP "[ Destructor: returns void  ] rename obj {}" 4
.IX Item "[ Destructor: returns void  ] rename obj {}"
.IP "[ Member data: returns uint8_t * ] \-generic_type" 4
.IX Item "[ Member data: returns uint8_t * ] -generic_type"
.IP "[ Member data: returns uint8_t * ] \-prod_type_msb" 4
.IX Item "[ Member data: returns uint8_t * ] -prod_type_msb"
.IP "[ Member data: returns ib_net16_t * ] \-prod_type_lsb" 4
.IX Item "[ Member data: returns ib_net16_t * ] -prod_type_lsb"
.IP "[ Member data: returns ib_net16_t * ] \-trap_num" 4
.IX Item "[ Member data: returns ib_net16_t * ] -trap_num"
.IP "[ Member data: returns ib_net16_t * ] \-issuer_lid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -issuer_lid"
.IP "[ Member data: returns ib_net16_t * ] \-toggle_count" 4
.IX Item "[ Member data: returns ib_net16_t * ] -toggle_count"
.IP "[ Member data: returns ib_net16_t * ] \-sw_lid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -sw_lid"
.PD
the sw lid of which link state changed \- for 128 only
.IP "[ Member data: returns ib_gid_t * ] \-issuer_gid" 4
.IX Item "[ Member data: returns ib_gid_t * ] -issuer_gid"
.PD 0
.IP "[ Member : returns int  ] send_trap pFromNode fromPort destLid" 4
.IX Item "[ Member : returns int  ] send_trap pFromNode fromPort destLid"
.PD
.Sh "class madNotice129"
.IX Subsection "class madNotice129"
.IP "[ Constructor: returns madNotice129 * ] madNotice129 name" 4
.IX Item "[ Constructor: returns madNotice129 * ] madNotice129 name"
.PD 0
.IP "[ Destructor: returns void  ] rename obj {}" 4
.IX Item "[ Destructor: returns void  ] rename obj {}"
.IP "[ Member data: returns uint8_t * ] \-generic_type" 4
.IX Item "[ Member data: returns uint8_t * ] -generic_type"
.IP "[ Member data: returns uint8_t * ] \-prod_type_msb" 4
.IX Item "[ Member data: returns uint8_t * ] -prod_type_msb"
.IP "[ Member data: returns ib_net16_t * ] \-prod_type_lsb" 4
.IX Item "[ Member data: returns ib_net16_t * ] -prod_type_lsb"
.IP "[ Member data: returns ib_net16_t * ] \-trap_num" 4
.IX Item "[ Member data: returns ib_net16_t * ] -trap_num"
.IP "[ Member data: returns ib_net16_t * ] \-issuer_lid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -issuer_lid"
.IP "[ Member data: returns ib_net16_t * ] \-toggle_count" 4
.IX Item "[ Member data: returns ib_net16_t * ] -toggle_count"
.IP "[ Member data: returns ib_net16_t * ] \-pad" 4
.IX Item "[ Member data: returns ib_net16_t * ] -pad"
.IP "[ Member data: returns ib_net16_t * ] \-lid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -lid"
.PD
lid and port number of the violation
.IP "[ Member data: returns uint8_t * ] \-port_num" 4
.IX Item "[ Member data: returns uint8_t * ] -port_num"
.PD 0
.IP "[ Member data: returns ib_gid_t * ] \-issuer_gid" 4
.IX Item "[ Member data: returns ib_gid_t * ] -issuer_gid"
.IP "[ Member : returns int  ] send_trap pFromNode fromPort destLid" 4
.IX Item "[ Member : returns int  ] send_trap pFromNode fromPort destLid"
.PD
.Sh "class madNotice144"
.IX Subsection "class madNotice144"
.IP "[ Constructor: returns madNotice144 * ] madNotice144 name" 4
.IX Item "[ Constructor: returns madNotice144 * ] madNotice144 name"
.PD 0
.IP "[ Destructor: returns void  ] rename obj {}" 4
.IX Item "[ Destructor: returns void  ] rename obj {}"
.IP "[ Member data: returns uint8_t * ] \-generic_type" 4
.IX Item "[ Member data: returns uint8_t * ] -generic_type"
.IP "[ Member data: returns uint8_t * ] \-prod_type_msb" 4
.IX Item "[ Member data: returns uint8_t * ] -prod_type_msb"
.IP "[ Member data: returns ib_net16_t * ] \-prod_type_lsb" 4
.IX Item "[ Member data: returns ib_net16_t * ] -prod_type_lsb"
.IP "[ Member data: returns ib_net16_t * ] \-trap_num" 4
.IX Item "[ Member data: returns ib_net16_t * ] -trap_num"
.IP "[ Member data: returns ib_net16_t * ] \-issuer_lid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -issuer_lid"
.IP "[ Member data: returns ib_net16_t * ] \-toggle_count" 4
.IX Item "[ Member data: returns ib_net16_t * ] -toggle_count"
.IP "[ Member data: returns ib_net16_t * ] \-pad1" 4
.IX Item "[ Member data: returns ib_net16_t * ] -pad1"
.IP "[ Member data: returns ib_net16_t * ] \-lid" 4
.IX Item "[ Member data: returns ib_net16_t * ] -lid"
.PD
lid where capability mask changed
.IP "[ Member data: returns ib_net16_t * ] \-pad2" 4
.IX Item "[ Member data: returns ib_net16_t * ] -pad2"
.PD 0
.IP "[ Member data: returns ib_net32_t * ] \-new_cap_mask" 4
.IX Item "[ Member data: returns ib_net32_t * ] -new_cap_mask"
.PD
new capability mask
.IP "[ Member data: returns ib_gid_t * ] \-issuer_gid" 4
.IX Item "[ Member data: returns ib_gid_t * ] -issuer_gid"
.PD 0
.IP "[ Member : returns int  ] send_trap pFromNode fromPort destLid" 4
.IX Item "[ Member : returns int  ] send_trap pFromNode fromPort destLid"
.PD
.SH "AUTHOR"
.IX Header "AUTHOR"
Eitan Zahavi, Mellanox Technologies \s-1LTD\s0, eitan@mellanox.co.il
