149,165d148
< uint32_t test_data(uint8_t src, uint8_t *buf,uint8_t count ,uint8_t step)
< {
<     uint8_t i=0;
<     uint32_t error_count=0;
<     for(i=0;i<count;i++)
<     {
<        if(src!=*buf)
<        {
<           error_count++;
<           printf("###Receive ERROR Data:%02x  addr: %08x Test Data:%02x  option:%d\n",*buf,buf,src,i);
<           fflush(stdout);
<        }
<        src=src+step;
<        buf++;
<     }
<     return error_count;
< }
226,228c209,219
<     uint8_t data=1;
<     uint32_t receive_total=0;
<     uint32_t k=0;
---
>     void *copy_buf=NULL;
>     int copy_ret=0;
>     printf("posix memalign begin!\n");
>     copy_ret=posix_memalign(&copy_buf,4096,(FVL_SRIO_PACKET_LENGTH*64));
>     if(copy_ret!=0)
>     {
> 	printf("posix memalign error!\n");
> 	return;
>     }
>     
>     printf("posix memalign sucess!\n");
242,265c233
< 	  uint8_t *p=(uint8_t *)(buf_virt+offset);
< 	  uint32_t error_count=0;
< 	  fflush(stdout);
< 	  for(k=use_num;k<(use_num+packet_num);k++)
< 	  {
<                  uint8_t pdata=*p;
<                  error_count=test_data(data,p,FVL_SRIO_PACKET_LENGTH,0);
<                  if(error_count!=0)
<                  {
< 			  printf("Receive ERROR Data:%02x  Test Data:%02x error Number:%08x port:%d\n",pdata,data,error_count,port);
< 		          fflush(stdout);
<                           error_count=0;
<                  }else
< 		 {
< 	                  receive_total=receive_total+1;	
<                  }
< 		 data++;
< 	  }
< 	  if(receive_total==10000)
< 	  {
< 		printf("port:%d Data Right!\n",port);
< 	        fflush(stdout);
<                 receive_total=0;
< 	  }
---
> 	  memcpy(copy_buf,(buf_virt+offset),(FVL_SRIO_PACKET_LENGTH)*packet_num);//data deal with (write to ssd)
282c250
< 	}
---
>       }
